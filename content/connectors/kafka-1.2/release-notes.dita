<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_cn2_5ck_r5">
    <title>Release notes</title>
    <shortdesc>Release notes for the 1.2 version of the Kafka connector.</shortdesc>


    <concept id="ga120">
        <title>Couchbase Kafka Connector 1.2.0 GA (13 October 2015)</title>
        <shortdesc> Version 1.2.0 is the general availability (GA) release of the Kafka connector. It fixes issues with missing events in the streams, improves state initialization, and introduces flow control.</shortdesc>
        <conbody>
            <section id="ga120-features">
                <title>New features and behavioral changes</title>
                <p>This release contains the following features:</p>

                <ul>
                    <li>
                        <xref href="https://www.couchbase.com/issues/browse/KAFKAC-16" format="html" scope="external">KAFKAC-16</xref>:
                        Helper to gather current state of the streams, to simplify initialization of the streams. For example the following code will fetch all changes up to current state. See more info on documentation for class <codeph>Direction</codeph>.
			<codeblock outputclass="language-java"><![CDATA[CouchbaseKafkaConnector connector = CouchbaseKafkaConnector.create(builder.build());
BucketStreamAggregatorState state = connector.buildState("hello", Direction.TO_CURRENT);
connector.run(state, RunMode.RESUME);
]]></codeblock>
                    </li>
                    <li>
                        <xref href="https://www.couchbase.com/issues/browse/KAFKAC-11" format="html" scope="external">KAFKAC-11</xref>: Update Zookeeper state serializer to work with recent core library.
                    </li>
                    <li>
                        Allow to override Couchbase and Kafka credentials during connector initialization from the code.
			<codeblock outputclass="language-java"><![CDATA[CouchbaseKafkaConnector connector = CouchbaseKafkaConnector.create(
        Collections.singletonList("couchbase1.vagrant"), "default", "",
        "kafka1.vagrant", "default",
        environmtnt);
]]></codeblock>
                    </li>
                    <li>
                        <xref href="https://www.couchbase.com/issues/browse/JVMCBC-217" format="html" scope="external">JVMCBC-217</xref>:
                        In the core library flow control for streaming connection has been implemented. The connector can specify the buffer limit, which represents capacity of the events consumer. When the producer (Couchbase Server) will reach this value, it will stop emitting the events until the connector will notify about free space. The API of this feature exposed as two settings on environment: <codeph>dcpConnectionBufferSize()</codeph>, which represents the size of the window in bytes (default value is 20MB), and <codeph>dcpConnectionBufferAckThreshold()</codeph> which controls when the connector will emit buffer acknoledgement message (default is 4MB, which means that the acknowledgements will be sent while the current buffer level is greater than this value).
                    </li>
                </ul>
            </section>
        </conbody>
    </concept>
</concept>
