<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="sv-writing-views-keys">
 <title>Keys in spatial view functions</title>
 <shortdesc>When writing spatial views, the key is specified as an array where every element is one
  dimension.</shortdesc>
 <conbody>
  <p>Because spatial views are multidimensional, every dimension is either a single value or a
			range. Only numbers and GeoJSON geometry are supported.</p>
   
   <section><title>Single values</title>
    <p>When a single value is used in the key, it expands to a collapsed range. For example, the
     <codeph>[1, 2]</codeph> value is stored as <codeph>[[1, 1], [2, 2]]</codeph>.</p>
    
    <codeblock>emit([10.9, 48.4], null);</codeblock>
   </section>
   
   <section><title>Ranges</title>
    <p>Ranges for keys are used, for example, with shops with certain opening hours such as 10:00 to
				20:00.</p>
    <codeblock>emit([[1000, 2000]], null);</codeblock>
   </section>
   
   <section><title>GeoJSON geometry</title>
    <p>A GeoJSON geometry can be used in a key. It must be the first element of the array. The
				bounding box is automatically calculated and used as the range.</p>
     <p>All geometry types of the <xref href="http://geojson.org/geojson-spec.html" format="html"
					scope="external">GeoJSON specification</xref> are supported: <codeph>Point</codeph>,
					<codeph>MultiPoint</codeph>, <codeph>LineString</codeph>,
					<codeph>MultiLineString</codeph>, <codeph>Polygon</codeph>,
					<codeph>MultiPolygon</codeph>, and <codeph>GeometryCollection</codeph>.</p>
    <codeblock>emit([{
   "type": "Point",
   "coordinates":[10.9, 48.4]
}], null);
   </codeblock>
    <p>Internally, the key is stored as <codeph>[[10.9, 10.9], [48.4, 48.4]]</codeph>. GeoSJON
     geometry in the key can be combined with single values or ranges. For example, to store shop
     categories and category 5 refers to cloths.</p>
    
    <p>In this case, the emit could be:</p>
    <codeblock>emit([{
   "type": "Point",
   "coordinates":[10.9, 48.4]
}, [1000, 2000], 5], null);
   </codeblock>
    
    <note type="note">For backward compatibility, you can also emit a GeoJSON geometry that is not wrapped in an array.</note>
   
  </section>
  
  
 </conbody>
 
</concept>
