<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_wk1_5v3_t5">
  <title>Query Settings</title>
  <shortdesc>You can set the query settings. </shortdesc><body>
    <p>The Couchbase Query Service is made of two components, Service-level query settings and
      Request-level parameters, which are set, used, and behave differently:</p>
    <table frame="all" rowsep="1" colsep="1" id="table_hkz_dlp_j1b">
      <title/>
      <tgroup cols="5" align="left">
        <colspec colname="c1" colnum="1" align="left" colwidth="130"/>
        <colspec colname="c2" colnum="2" colwidth="130"/>
        <colspec colname="c3" colnum="3" colwidth="130"/>
        <colspec colname="c4" colnum="4" colwidth="130"/>
        <colspec colname="c5" colnum="5" colwidth="140"/>
        <thead>
          <row>
            <entry/>
            <entry>Setting Per</entry>
            <entry>Set By</entry>
            <entry>Set On</entry>
            <entry>Set Via</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><b>Service-level Query Settings</b></entry>
            <entry>Service Node</entry>
            <entry>The administrator at the system level</entry>
            <entry>Server side</entry>
            <entry>curl statements</entry>
          </row>
          <row>
            <entry><b>Request-level Parameters</b></entry>
            <entry>Request (statement)</entry>
            <entry>Each user</entry>
            <entry>Client side</entry>
            <entry>cbq command-line parameters, curl or client programming</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <note>The Request-level Parameters overwrite their Service-level Query Setting
      equivalents.</note>
    <note>The Service-level settings will dictate the upper-bound values of the Request-level
      parameters.  For example, if the Service-level<codeph> timeout </codeph>is set to 500, then
      the Request-level parameter cannot be set to 501 or any value higher.</note>
    <p>To set a Service-level query setting, while the Query Service is running, use the
      /admin/settings REST API endpoint with a curl statement.</p>
    <p>To see a list of the current Query Settings,
      enter:<codeblock>curl http://<varname>hostname</varname>:8093/admin/settings -u <varname>user</varname>:<varname>pword</varname></codeblock></p>
    <p>This will output to the screen the entire list of service-level query
      settings:<codeblock>{"completed-limit":7000,"completed-threshold":0,"controls":false,"cpuprofile":"","debug":false,"keep-alive-length":16384,"loglevel":"INFO","max-index-api":2,"max-parallelism":1,"memprofile":"","pipeline-batch":16,"pipeline-cap":512,"prepared-limit":16384,"pretty":false,"profile":"off","request-size-cap":67108864,"scan-cap":512,"servicers":32,"timeout":0}</codeblock>To
      output to a file for editing multiple settings at a single time, add the<varname> -o filename
      </varname>option, for
      example:<codeblock>curl http://<varname>hostname</varname>:8093/admin/settings -u <varname>user</varname>:<varname>pword</varname> -o settings.txt</codeblock>To
      instantly change one setting, see details of each setting in the below
      <?oxy_custom_start type="oxy_content_highlight" color="255,255,0"?>Service-Level Query
      Settings<?oxy_custom_end?> table.</p>
    <section id="section_rvx_smp_j1b">
      <title>Table of Query Setting Levels and Overwrites</title>
      <p>Some query settings are service-level or request-level only, while some are both levels
        with slightly different names.</p>
    </section>
    <table frame="all" rowsep="1" colsep="1" id="table_s3x_1np_j1b">
      <title/>
      <tgroup cols="2" align="left">
        <colspec colname="c1" colnum="1"/>
        <colspec colname="c2" colnum="2"/>
        <thead>
          <row>
            <entry>Service-level Name</entry>
            <entry>Request-level Name</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><b><i>Service-level Only
                Settings</i></b><p>completed-limit</p><p>completed-threshold</p><p>cpuprofile</p><p>debug</p><p>keep-alive-length</p><p>loglevel</p><p>max-index-api</p><p>memprofile</p><p>request-size-cap</p><p>servicers</p><p/><p>NOTE:
                These settings can not be set by cbq.</p></entry>
            <entry><b><i>Request-level Only
                Settings</i></b><p>args</p><p>batch-args</p><p>batch_named_args</p><p>client_context</p><p>compression</p><p>creds</p><p>encoded_plan</p><p>encoding</p><p>format</p><p>namespace</p><p>prepared</p><p>scan_consistency</p><p>scan_vector</p><p>scan_vectors</p><p>scan_wait</p><p>statement</p><p>$&lt;<i>identifier</i>></p><p/></entry>
          </row>
          <row>
            <entry namest="c1" nameend="c2" align="center"><b><i>Both Service-level and
                  Request-level Settings</i></b></entry>
          </row>
          <row>
            <entry>controls<p>max-parallelism</p><p>metrics</p><p>pipeline-batch</p><p>pipeline-cap</p><p>pretty</p><p>profile</p><p>readonly</p><p>scan-cap</p><p>signature</p><p>timeout</p></entry>
            <entry>controls<p>max_parallelism</p><p>metrics
                *</p><p>pipeline_batch</p><p>pipeline_cap</p><p>pretty</p><p>profile</p><p>readonly
                *</p><p>scan_cap</p><p>signature *</p><p>timeout</p></entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <p>* Request-level Parameters overwrite their Service-level equivalents, except<codeph>
        metrics</codeph>,<codeph> readonly</codeph>, and<codeph> signature</codeph>.</p>
    <section id="section_snb_qpp_j1b">
      <title>Service-Level Query Settings</title>
      <p>Below is a description of each query setting along with examples. While<codeph> cbq
        </codeph>is a sandbox to test code on your local machine, your production query settings are
        set with the<codeph> curl </codeph>commands on your server. These are the only two ways to
        set these settings, and not all settings can be set by<codeph> cbq</codeph>.</p>
    </section>
    <p/>
    <p>
      <table frame="all" rowsep="1" colsep="1" id="table_kgw_2lr_hz">
        <title>Service-Level Query Settings</title>
        <tgroup cols="4">
          <colspec colname="c1" colnum="1" colwidth="1*"/>
          <colspec colname="newCol2" colnum="2" colwidth="1*"/>
          <colspec colname="c2" colnum="3" colwidth="1.33*"/>
          <colspec colname="c3" colnum="4" colwidth="2.93*"/>
          <thead>
            <row>
              <entry>Setting</entry>
              <entry>Type</entry>
              <entry>Default</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry><codeph>completed-limit</codeph></entry>
              <entry>int</entry>
              <entry><codeph>4000</codeph></entry>
              <entry>Maximum number of completed requests.<p>Increase this when the completed
                  request keyspace is not big enough to track the slow requests, such as when
                  customers want a larger sample of slow requests.</p><p>Ex:<codeph> curl
                      http://<varname>hostname</varname>:8093/admin/settings -d
                    '{"completed-limit":7000}' -u
                    <varname>user</varname>:<varname>pword</varname></codeph></p></entry>
            </row>
            <row>
              <entry><codeph>completed-threshold</codeph></entry>
              <entry>int</entry>
              <entry><codeph>1000</codeph></entry>
              <entry> Cache completed query lasting longer than this many milliseconds.<p>Specify 0
                  to track all requests independent of duration.</p><p>Specify any negative number
                  to track none.</p><p>Ex:  <codeph>curl
                    http://<varname>hostname</varname>:8093/admin/settings -d
                    '{"completed-threshold":7000}' -u
                      <varname>user</varname>:<varname>pword</varname></codeph></p></entry>
            </row>
            <row>
              <entry><codeph>controls</codeph></entry>
              <entry>bool</entry>
              <entry><codeph>false</codeph></entry>
              <entry><p dir="ltr">When set to <codeph>true</codeph>, the query response document
                  includes a controls section with runtime information provided along with the
                  request, such as positional and named parameters or settings.</p>Ex:<codeph> cbq>
                  \SET -controls true;</codeph><p>Ex:<codeph> curl
                      http://<varname>hostname</varname>:8093/admin/settings -d '{"controls":true}'
                    -u <varname>user</varname>:<varname>pword</varname></codeph></p></entry>
            </row>
            <row>
              <entry><codeph>cpuprofile</codeph></entry>
              <entry>string</entry>
              <entry><codeph>""</codeph></entry>
              <entry>The absolute path and filename to write the CPU profile to a local file. <p>The
                  output file includes a controls section and performance measurements, such as
                  memory allocation and garbage collection, to pinpoint bottlenecks and ways to
                  improve your code execution.</p><p>To stop <codeph>cpuprofile</codeph>, run with
                  the empty setting of <codeph>""</codeph>.</p><p>NOTE: If
                    <codeph>cpuprofile</codeph> is left running too long, it can slow the system
                  down as its file size increases.</p><p>Ex: <codeph>curl
                      http://<varname>hostname</varname>:8093/admin/settings -d
                    '{"cpuprofile":"/tmp/info.txt"}' -u
                      <varname>user</varname>:<varname>pword</varname></codeph></p></entry>
            </row>
            <row>
              <entry/>
              <entry/>
              <entry/>
              <entry/>
            </row>
            <row>
              <entry/>
              <entry/>
              <entry/>
              <entry/>
            </row>
            <row>
              <entry/>
              <entry/>
              <entry/>
              <entry/>
            </row>
            <row>
              <entry/>
              <entry/>
              <entry/>
              <entry/>
            </row>
            <row>
              <entry/>
              <entry/>
              <entry/>
              <entry/>
            </row>
            <row>
              <entry/>
              <entry/>
              <entry/>
              <entry/>
            </row>
            <row>
              <entry/>
              <entry/>
              <entry/>
              <entry/>
            </row>
            <row>
              <entry/>
              <entry/>
              <entry/>
              <entry/>
            </row>
            <row>
              <entry/>
              <entry/>
              <entry/>
              <entry/>
            </row>
            <row>
              <entry/>
              <entry/>
              <entry/>
              <entry/>
            </row>
            <row>
              <entry/>
              <entry/>
              <entry/>
              <entry/>
            </row>
            <row>
              <entry><codeph>profile</codeph></entry>
              <entry>string</entry>
              <entry><codeph>off</codeph></entry>
              <entry>The profiling state:  off, phases, or timings.<p><codeph>off - </codeph>no
                  profiling information is added to the query response.</p><p><codeph>phases -
                  </codeph>the query response includes a profile section with stats and details
                  about various phases of the query plan and execution. Three phase times will be
                  included in the system:active_requests and system:completed_requests monitoring
                  keyspaces.</p><p><codeph>timings - </codeph>besides the phase times, the profile
                  section of the query response document will include a full query plan with timing
                  and information about the number of processed documents at each phase. This
                  information will be included in the <codeph>system:active_requests</codeph> and
                    <codeph>system:completed_requests</codeph> keyspaces.</p><p>NOTE:  If profile is
                  not set as one of the above values, then the profile setting does not
                  change.</p>Ex:<codeph> cbq> \SET -profile "phases";</codeph><p>Ex: <codeph>curl
                      <xref href="http://hostname:8093/admin/settings" format="html"
                      scope="external">http://<varname>hostname</varname>:8093/admin/settings</xref>
                    -d '{"profile":"phases"}' -u
                    <varname>user</varname>:<varname>pword</varname></codeph></p></entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </p>
  </body>
</topic>
