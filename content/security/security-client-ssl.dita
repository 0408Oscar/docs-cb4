<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="security-client-ssl">
	<title>Secure data access</title>
	<shortdesc>Couchbase Server client libraries support client-side encryption using the Secure
		Sockets Layer (SSL) protocol.</shortdesc>
	
		
	<conbody>
		<p>Encryption for data access is performed through client-server communication and view
			access.</p>
		

		<section><title>SSL-based client-server communication</title>
			<p>Couchbase Server client libraries support client-side encryption using the SSL protocol by
				encrypting data in-flight between the client and the server. For Couchbase clients
				released after version 2.0, Couchbase Server provides secure client-server
				communication that does not require configuration.</p>
			<p>Client-server communication also allows for the cases where some of the clients communicate with the server using SSL, while the other clients do not.</p>
			<p>To enable SSL on the client side, you need to get an SSL certificate from Couchbase Server and
				then follow the steps specific to the client you are using. </p>
			<p>To obtain the certificate, access the Couchbase Web Console, 
				navigate to <menucascade>
					<uicontrol>Settings</uicontrol><uicontrol>Certificate</uicontrol><uicontrol>Show certificate</uicontrol>
				</menucascade> and copy the certificate.</p>
			<note type="note">The certificate that is obtained is a self-signed server-generated
				certificate.</note>
			<note type="note">If the Couchbase Server SSL certificate is re-generated, you must obtain a new
				certificate.</note>
			
			<p>The following clients support SSL:</p>
			<ul>
				<li>Java</li>
				<li>.NET</li>
				<li>Node.js</li>
				<li>PHP</li>
				<li>C</li>
			</ul>
			
			<note type="note">Use the Couchbase network port <codeph>11207</codeph> for data communication
				between the client and the data nodes using SSL.</note>
			
		</section>
		<section><title>SSL-based view access</title>
			<p>A new port <codeph>18092</codeph> is established for view access: <codeph>https://couchbase_server:18092</codeph></p></section>
		
		<section><title>Supported ciphers</title> Couchbase Server uses the ciphers that are accepted by
			default by OpenSSL. <!--<p>You can't restrict memcached to only use certain ciphers in 3.x. 
				In a future version, it will be possible 
				(the code is in watson) ns_server may instruct memcached only to use "high encryption" ciphers 
				(> 128bits) or also permit medium ciphers (==128 bits) by passing either HIGH or MEDIUM 
				as the value to the configuration token: ssl_cipher_list (it may also be an exact list 
				of ciphers to use). 
				When left blank it'll accept whatever openSSL accepts by default 
				(and that's whats present in 3.x and sherlock).</p>-->
			<p>The default is to have high-security ciphers built in with openSSL. For example, on
				the MAC OS these are: <ul>
					<li>AES256-SHA...YES</li>
					<li>AES128-SHA...YES</li>
					<li>DES-CBC3-SHA...YES </li>
				</ul></p><p>You can override this selection by setting the environment variable
				before starting Couchbase as follows:
					</p><p><codeph>COUCHBASE_SSL_CIPHER_LIST</codeph>= &lt;<varname>list of ciphers
					to accept</varname>&gt; </p><p>Set the variable to
					<codeph>COUCHBASE_SSL_CIPHER_LIST= MEDIUM, HIGH</codeph> to include only medium-
				and high-security ciphers for your installation.</p> For example, on the MAC OS
			these are: <ul>
				<li>SEED-SHA...YES</li>
				<li>AES256-SHA...YES</li>
				<li>AES128-SHA...YES</li>
				<li>DES-CBC3-SHA...YES</li>
				<li>RC4-SHA...YES</li>
				<li>RC4-MD5...YES</li>
				<li>RC4-MD5...YES</li>
			</ul>
		</section>
		
	</conbody>
</concept>
