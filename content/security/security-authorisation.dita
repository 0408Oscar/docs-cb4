<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_sbf_kpm_lq">
  
  <title>
    Authorization
  </title>
  
  <shortdesc>
    Authorization is the mechanism whereby a system determines what level of resource-access 
    should be granted an authenticated user or application.
  </shortdesc>
  
  <body>
    
    <section>
      
      <title>
        Role-Based Access Control
      </title>
      
    <p>
      Couchbase provides <i>Role-Based Access Control</i> (RBAC), whereby both administrators and
      applications can be authorized. This allows resource-access to be controlled with fine
      granularity. Potentially, therefore, whereas some administrators might be granted full read-write
      permission on all areas of Couchbase Server, others might be granted only more narrowly defined forms of
      access. For example, an administrator might be allowed read-permission on the whole system, but
      no ability to write; or, might be given read or write permission only on a subset of buckets,
      indexes, or views. 
    </p>
      
    <p>
      Similarly, applications might be permited to select bucket-data, but not
      insert; or, might be permitted to update, insert, and upsert, but not delete.
    </p>
      
    <p>
      Couchbase clusters, bucket-data, bucket-statistics, views, indexes, catalogs, and
      backup and replication activities can all be protected in this way. An appropriately
      authorized administrator can use the Couchbase Web Console to grant specific combinations 
      of access-permission to different recipients.
    </p>
      
    <p>
      
    </p>
    
    </section>
    
    <section>
      <title>
        Example Scenarios
      </title>
      
      <p>
        Couchbase RBAC provides a secure solution for each of 
        the following scenarios:
      </p>
      
      <ul>
        <li>
          An application consists of several services, each of which has a different
          purpose. Compliance demands that each service be given a different set of read and write privileges,
          in order to constrain its activities to those absolutely required.
          
          <p>
            <!-- Vertical space -->
            
          </p>
          
        </li>
        
        <li> 
          An application is available to several different classes of user. Each user-class
          has a different set of requirements for reading and writing data.
          Compliance demands that each user-class be given no more than the minimum privileges 
          for supporting its requirements.
          
          <p>
            <!-- Vertical space -->
            
          </p>
          
        </li>
        
        <li>
          A Couchbase bucket has been defined to contain sensitive data 
          that should be accessible to only a minimal
          subset of administrators. While highly select members of the subset should be granted either
          read or read-write privileges on the data itself (for example, in order to define
          Views, set up XDCR filters, or run queries); others should be granted access
          only to statistical data provided in support of the bucket
          (for example, in relation to memory-management or performance). 
          
          <p>
            <!-- Vertical space -->
            
          </p>
          
        </li>
        
        <li>
          Test and production environments respectively require different degrees of constraint 
          to be applied to read and write access. Administrators, developers, applications, and services should 
          therefore each be granted one set of privileges for the test environment, and another 
          (more restrictive) for the production.
          
          <p>
            <!-- Vertical space -->
            
          </p>
          
        </li>
        
      </ul>
      
      
    </section>
    
  </body>
  
</topic>
