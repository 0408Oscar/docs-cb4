<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_jzr_ct2_gv">
  <title>Password-Based Authentication</title><shortdesc>In Couchbase clients can verify their identity by providing a secret predetermined value
    either by sending their password to the server through encrypted channels or by using a
    hash-based challenge-response method.</shortdesc>
  <body>
    <section><title>Authentication for Administrators </title>Passwords for the Full Administrators
      are set up during the initial installation of Couchbase Server. See <xref
        href="../install/init-setup.dita#topic12527/setpass"/>for details.<p>Check also the Security
        Best Practices for setting <xref href="security-passwords.dita#topic_iyx_5ps_lq">Couchbase
          passwords</xref>. </p><dl>
        <dlentry>
          <dt>Resetting the Administrative Password</dt>
          <dd>The administrative password can be reset using the password reset tool: <xref
              href="../cli/cbreset_password-tool.dita#cbreset_password_tool"/></dd>
        </dlentry>
      </dl></section> 
    <section id="standardport">
      <title>Authentication for Applications</title>
      <p>Applications authenticate themselves with buckets using the SASL password.</p>
      
      <p>Authentication at the bucket level takes place over the CRAM-MD5 protocol and involves a
        single challenge-and-response cycle initiated by Couchbase Server. </p>
      <p>In the challenge sequence, the server sends a string in the format of a Message ID (email
        header value including angle brackets). The Message ID includes an arbitrary string of random
        digits, a timestamp, and the server's fully qualified domain name. </p>
      <p>Access control is configured using the Couchbase Web Console at <menucascade>
        <uicontrol>Data Buckets</uicontrol>
        <uicontrol>Create New Data Bucket</uicontrol>
      </menucascade> and is set for two ports:</p>
      <p><image href="../images/admin-access-control.png" align="left"
        width="600"/></p>
      
      <dl>
        <dlentry>
          <dt>Standard port</dt>
          <dd>The standard port is the TCP port <codeph>11211</codeph>, which requires SASL
            authentication. Enter the password that complies with the best practices rules.</dd>
        </dlentry>
        <dlentry>
          <dt>Dedicated port</dt>
          <dd>The dedicated port supports ASCII protocol and doesn't need authentication. You only
            need to enter the port number.</dd>
        </dlentry>
      </dl>
    </section>  
    <section><title>Verification Methods</title>
 <dl>
   <dlentry>
          <dt>Transmission through Encrypted Channels</dt>
          <dd>When a client uses this verification method, its password is transmitted via an
            encrypted channel such as TLS. </dd>
        </dlentry>
 </dl>
    <dl>
   <dlentry>
     <dt>Hash-based Challenge-Response Methods</dt>
     <dd>In these methods, the server asks for a password and also requires the value that depends
          on the password such as a hash function. </dd>
   </dlentry>
 </dl>
   <p>Transmission through encrypted channels and hash-based challenge-response methods can be
      combined; for example, a challenge-response method can be transmitted either through encrypted
      or unencrypted channels. </p></section>
   <section><title>Mechanisms for Implementing Challenge-response Authentication Methods</title>
   

    
    <p>The basic concept of challenge-response authentication methods is that the client and server
        never send enough information for a hacker to be able to decrypt a password. Instead, the
        protocol serves to generate a client proof that the server uses to determine authentication.  </p><p>After the client and server establish a connection, the server generates a question or a
          <term>challenge</term>. This challenge varies in every authentication so that only the
        legitimate client (who knows the password) can respond in a satisfactory way. </p>
    <p>Using the challenge-response option improves security since the password is not transmitted
        during the authentication. The assumption is that both the client and the server initially
        know the password that was shared during the registration. </p><p>The
        following diagram shows a generic authentication sequence.</p>
    <p><image
          href="../admin/picts/security-chall-response-protocol.png" id="image_u1p_xmf_gv"
          align="left" width="300"/></p>
      <dl>
        <dlentry>
          <dt>CRAM-MD5</dt>
          <dd>Challenge/Response Authentication Mechanism - MD5 (CRAM-MD5) is a password-based
            authentication mechanism, which utilizes a cryptographic hash algorithm to protect the
            password during the authentication exchange against eavesdropping.</dd>
        </dlentry>
      </dl>
      <dl>
        <dlentry>
          <dt>SCRAM</dt>
          <dd>Salted Challenge Response Authentication Mechanism (SCRAM) uses a cryptographic hash
            algorithm to provide mutual authentication. The mechanism proves to the server that the
            user knows a secret derived from the user's password and proves to the client that the
            server knows a secret derived from the user's password. Actual passwords are not sent,
            and the value is constructed so that the value cannot be used to impersonate the user. </dd>
          <dd>SCRAM does not provide a security layer and is intended to be used with TLS: 
            it is designed to allow for a mechanism-specific password hash to be stored.  </dd>
        </dlentry>
      </dl>  
      <dl>
        <dlentry>
          <dt>SCRAM-SHA-1</dt>
          <dd>In SCRAM-SHA-1, TLS use is not independent of the mechanism and is prone to the "click
            through" problems that open LDAP sessions to hijack attacks. </dd>
          <dd>The security of this hash is only as strong as the weakest digest used by it. Since
            the SCRAM protocol requires that SHA1 be always supported, it is usually the weakest
            link ( other digests, such as SHA2-256, are stronger). </dd>
        </dlentry>
      </dl>
   </section>
  </body>
</topic>
