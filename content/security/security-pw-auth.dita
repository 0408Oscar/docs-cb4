<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_jzr_ct2_gv">
  <title>Password-based Authentication</title><shortdesc>In Couchbase clients can verify their identity by providing a secret predetermined value
    either by sending their password to the server through encrypted channels or by using a
    hash-based challenge-response method.</shortdesc>
  <body>
 <dl>
   <dlentry>
     <dt>Transmission through Encrypted Channels</dt>
     <dd>In this client verification method, client's password is transmitted via an encrypted
          channel such as TLS. </dd>
   </dlentry>
 </dl>
    <dl>
   <dlentry>
     <dt>Hash-based Challenge-Response Methods</dt>
     <dd>In these methods, the server asks for a password and also requires the value that depends
          on the password such as a hash function. </dd>
   </dlentry>
 </dl>
   <p>Transmission through encrypted channels and hash-based challenge-response methods can be
      combined; for example, a challenge-response method can be transmitted either through encrypted
      or unencrypted channels. </p>
    <section><title>Mechanisms for Implementing Challenge-response Authentication Methods</title>
   

    
    <p>The basic concept of challenge-response authentication methods is that the client and server
        never send enough information for a hacker to simply decrypt a password. Instead, the
        protocol serves to generate a client proof that the server uses to determine authentication. </p><p>After the connection between the client and the server is established, the server generates a
        question or a <term>challenge</term>. The challenge varies in every authentication so that
        only the legitimate client (who knows the password) can respond in a satisfactory way. </p>
    <p>Using the challenge-response option improves security since the password is not transmitted
        during the authentication. The assumption is that both the client and the server initially
        know the password that was shared during the registration. </p><p>The
        following diagram shows a generic authentication sequence.</p>
    <p><image
          href="../admin/picts/security-chall-response-protocol.png" id="image_u1p_xmf_gv"
          align="left" width="300"/></p>
      <dl>
        <dlentry>
          <dt>CRAM-MD5</dt>
          <dd>Challenge/Response Authentication Mechanism - MD5 (CRAM-MD5) is a password-based
            authentication mechanism, which utilizes a cryptographic hash algorithm to protect the
            password during the authentication exchange against eavesdropping.</dd>
        </dlentry>
      </dl>
      <dl>
        <dlentry>
          <dt>SCRAM</dt>
          <dd>Salted Challenge Response Authentication Mechanism (SCRAM) utilizes a cryptographic
            hash algorithm to provide mutual authentication. The mechanism proves to the server that
            the user knows a secret derived from the user's password and proves to the client that
            the server knows a secret derived from the user's password. Actual passwords are not
            sent, and the value is constructed so that the value cannot be used to impersonate the
            user. </dd>
          <dd>SCRAM does not provide a security layer and is intended to be used with TLS. It is
            designed to allow a mechanism-specific password hash to be stored.  </dd>
        </dlentry>
      </dl>  
      <dl>
        <dlentry>
          <dt>SCRAM-SHA-1</dt>
          <dd>In SCRAM-SHA-1, TLS use is not independent of the mechanism and is prone to the "click
            through" problems that open LDAP sessions to hijack attacks. </dd>
          <dd>The security of this hash is only as strong as the weakest digest used by it. Since
            the SCRAM protocol requires that SHA1 is always supported, it is usually the weakest
            link ( other digests, such as SHA2-256, are stronger). </dd>
        </dlentry>
      </dl></section>
  </body>
</topic>
