<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd">
<reference id="couchbase_cli_user_manage">
  
  <title>
    <cmdname>user-manage</cmdname>
  </title>
  
  <shortdesc>
    Assigns roles to users.
  </shortdesc>
  
  <refbody>
    
    <section>
      
      <title>
        Syntax
      </title>
      
      <p>
        The basic syntax is:
      </p>
      
      <codeblock>couchbase-cli user-manage [--cluster &lt;url&gt;] [--username &lt;user&gt;]
        [--password &lt;password&gt;] [--delete] [--list] [--my-roles] [--set]
        [--rbac-username &lt;username&gt;] [--rbac-password &lt;password&gt;]
        [--rbac-name &lt;name&gt;] [--roles &lt;roles_list&gt;] [--auth_type &lt;type&gt;]</codeblock>
    
    
    
    </section>
    
    <section>
      <title>Description
      </title>
      
      <p>
        This command allows administrators to assign and manage roles to different users
        in their organization. Users can either be managed locally by Couchbase or
        externally through the use of saslauthd. 
      </p>
    
    </section> 
    
    
    <section>
      <title>
        Options
      </title>
      
      <p>
        The following are the command options:
      </p> 
      
      <table>
        <title>user-manage options</title>
        <tgroup cols="2">
          <colspec colname="col1" colwidth="1"/>
          <colspec colname="col2" colwidth="1.76"/>
          <thead>
            <row>
              <entry>Option</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            
            <row>
              <entry><codeph>--delete</codeph></entry>
              <entry>Deletes an RBAC user profile from the cluster. You must have full
                administrator privileges in order to delete a user profile.</entry>
            </row>
            
            
            <row>
              <entry><codeph>--list</codeph></entry>
              <entry>Lists all RBAC user profiles in the cluster and show their roles. You must
                have full administrator privileges in order to list all user profiles.</entry>
            </row>
            
            
            <row>
              <entry><codeph>--my-roles</codeph></entry>
              <entry>Shows the current user's RBAC user profile.</entry>
            </row>
            
            <row>
              <entry><codeph>--set</codeph></entry>
              <entry>Creates or updates an RBAC user profile. You must have full administrator
                privileges in order to create or update a user profile.</entry>
            </row>
            
            <row>
              <entry><codeph>--rbac-username &lt;username&gt;</codeph></entry>
              <entry>Specifies the username of the RBAC user to modify. This option is used when
                deleting, creating, or updating an RBAC user profile.</entry>
            </row>
            
            <row>
              <entry><codeph>--rbac-password &lt;password&gt;</codeph></entry>
              <entry>Specifies the password to be used for an RBAC user profile. This option is
                used only when creating or updating a 'builtin' RBAC user profile. Couchbase
                does not store password for 'saslauthd' RBAC roles.</entry>
            </row>
            
            <row>
              <entry><codeph>--rbac-name &lt;name&gt;</codeph></entry>
              <entry>Specifies the name to be used for an RBAC user profile. This option is used
                when creating or updating an RBAC user profile and it is recommended that
                this option be set to the user's full name.</entry>
            </row>
            
            <row>
              <entry><codeph>--roles &lt;roles_list&gt;</codeph></entry>
              <entry>Specifies the roles to be given to an RBAC user profile. This option is used
                when creating or updating an RBAC user profile and it is specified as a
                comma separated list of roles. </entry>
            </row>
            
            <row>
              <entry><codeph>--auth-type &lt;type&gt;</codeph></entry>
              <entry>Specifies the auth_type to used for an RBAC user profile. This option is used
                when deleting, creating or updating an RBAC user profile and it if may be
                set to either 'builtin' or 'external'. Builtin users are roles that are
                managed directly by the Couchbase cluster. External users are users
                managed by an external source suchas LDAP.</entry>
            </row>
            
          </tbody>
        </tgroup>
      </table> 
    </section>
    
    <section>
      <title>
        Cluster-Wide Roles
      </title>
      
      <p>
        The following are <i>cluster-wide</i> roles:
      </p> 
      
      <table>
        <title>Cluster-Wide Roles</title>
        <tgroup cols="2">
          <colspec colname="col1" colwidth="1*"/>
          <colspec colname="col2" colwidth="1.76*"/>
          <thead>
            <row>
              <entry>Role-Name</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            
            <row>
              <entry><codeph>admin</codeph></entry>
              <entry>Gives the user permissions to manage all Couchbase configuration settings,
                and read and write all data in the cluster. This user can make changes to
                anything in the cluster.</entry>
            </row>
            
            <row>
              <entry><codeph>bucket_admin</codeph></entry>
              <entry>Gives the user permissions to manage bucket settings. This role can be
                assigned globally to all buckets or to a particular bucket. For XDCR
                operations, the user can start/stop replication for the buckets they
                administer, but they cannot set up the XDCR cluster references. To give
                a user the ability to manage all bucket settings set their role to
                bucket_admin[*]. To give the user permission to manage bucket settings on a
                single bucket named 'default' then specify the role as
                bucket_admin[default]. If the user needs to be manage multiple buckets, for
                example 'default' and 'app', then set the role as bucket[default,app].</entry>
            </row>
            
            <row>
              <entry><codeph>cluster_admin</codeph></entry>
              <entry>Gives the user permissions to read, write and manage all cluster-level
                settings except security.</entry>
            </row>
            
            <row>
              <entry><codeph>replication_admin</codeph></entry>
              <entry>Allows the user to configure XDCR topology and manage XDCR replications.</entry>
            </row>
            
            <row>
              <entry><codeph>ro_admin</codeph></entry>
              <entry>Gives the user read-only access and cannot make any changes to the system.
                This user has read-only access to cluster overview, design documents
                (without the ability to create or query views), bucket summaries (without
                the ability to create or view documents), XDCR cluster references, XDCR
                replications, and cluster settings.</entry>
            </row>
            
            <row>
              <entry><codeph>view_admin[...]</codeph></entry>
              <entry>Gives the user privileges to define views and then run these views on data
                to ensure that views are defined properly. This applies both to the
                map-reduce and spatial views. To give a user the ability to manage views on
                all buckets set their role to views_admin[*]. To give the user permission to
                manage views on a single bucket named 'default' then specify the role as
                views_admin[default]. If the user needs to be manage views for multiple
                buckets, for example 'default' and 'app', then set the role as
                views_admin[default,app].</entry>
            </row>   
          </tbody>
        </tgroup>
      </table> 
    </section>
    
    
    <section>
      <title>
        Data Service Roles
      </title>
      
      <p>
        The following are <i>data service</i> roles:
      </p> 
      
      <table>
        <title>Data Service Roles</title>
        <tgroup cols="2">
          <colspec colname="col1" colwidth="1*"/>
          <colspec colname="col2" colwidth="1.76*"/>
          <thead>
            <row>
              <entry>Role-Name</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            
            <row>
              <entry><codeph>data_reader[...]</codeph></entry>
              <entry>
                Gives the user permission to read data through Couchbases key-value APIs.
                To give a user read-only access for all buckets set their role to
                data_reader[*]. To give the user read-only access to data on a single
                bucket named 'default' then specify their role as data_reader[default].
                If the user needs read-only access to data for multiple buckets, for example
                'default' and 'app', then set their role as data_reader[default,app].</entry>
            </row>
            
            <row>
              <entry><codeph>data_reader_writer[...]</codeph></entry>
              <entry>
                Gives the user permission to read and write data through Couchbases
                key-value APIs. The user cannot however modify the settings of a bucket.
                To give a user read-write access for all buckets set their role to
                data_reader_writer[*]. To give the user read-write access to data on a
                single bucket named 'default' then specify their role as
                data_reader_writer[default]. If the user needs read-write access to data
                for multiple buckets, for example 'default' and 'app', then set their role
                as data_reader_writer[default,app].</entry>
            </row>
            
            <row>
              <entry><codeph>data_dcp_reader[...]</codeph></entry>
              <entry>
                Gives the user permission to create Couchbase DCP connections. To give a
                user the ability to create DCP connections for all buckets set their role to
                data_dcp_reader[*]. To give the user the ability to create DCP connections
                on a single bucket named 'default' then specify their role as
                data_dcp_reader[default]. If the user needs to be able to create DCP
                connections for multiple buckets, for example 'default' and 'app', then set
                their role as data_dcp_reader[default,app].</entry>
            </row>
            
            <row>
              <entry><codeph>data_backup[...]</codeph></entry>
              <entry>
                Gives the user permission to backup and restore data in Couchbase. To give a
                user the ability to backup and restore data for all buckets set their role
                to data_backup[*]. To give the user the ability to backup and restore data
                on a single bucket named 'default' then specify their role as
                data_backup[default]. If the user needs to be able to backup and restore
                data for multiple buckets, for example 'default' and 'app', then set their
                role as data_backup[default,app].</entry>
            </row>
            
            <row>
              <entry><codeph>data_monitoring[...]</codeph></entry>
              <entry>
                Gives the user permission to read monitoring data related to the data
                service in Couchbase. To give a user the ability to monitor data for all
                buckets set their role to data_monitoring[*]. To give the user the ability
                to monitor data on a single bucket named 'default' then specify their role
                as data_monitoring[default]. If the user needs to be able to monitor data
                for multiple buckets, for example 'default' and 'app', then set their role
                as data_monitoring[default,app].</entry>
            </row>
            
          </tbody>
        </tgroup>
      </table> 
    </section>
    
    <section>
      <title>
        Full-Text Service Roles
      </title>
      
      <p>
        The following are <i>full-text service</i> roles:
      </p> 
      
      <table>
        <title>Full-Text Service Roles</title>
        <tgroup cols="2">
          <colspec colname="col1" colwidth="1*"/>
          <colspec colname="col2" colwidth="1.76*"/>
          <thead>
            <row>
              <entry>Role-Name</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            
            <row>
              <entry><codeph>fts_admin[...]</codeph></entry>
              <entry>
                Gives the user full administrator access for the Full Text Indexing service
                for the specified buckets. To give a user full administrator access for FTS
                on all buckets set their role to fts_admin[*]. To give the user full
                administrator access for FTS on a single bucket named 'default' then specify
                their role as fts_admin[default]. If the user needs full administrator
                access for FTS for multiple buckets, for example 'default' and 'app', then
                set their role as fts_admin[default,app].</entry>
            </row>
            
            <row>
              <entry><codeph>fts_searcher[...]</codeph></entry>
              <entry>
                Allows the user to query full text indexes for the specified buckets. To
                give a user the ability to query full text indexes on all buckets set their
                role to fts_searcher[*]. To give the ability to query FTS indexes on a
                single bucket named 'default' then specify their role as
                fts_searcher[default]. If the user needs to query FTS indexes on multiple
                multiple buckets, for example 'default' and 'app', then set their role as
                fts_searcher[default,app].</entry>
            </row>    
          </tbody>
        </tgroup>
      </table> 
    </section>
    
    <section>
      <title>
        Query Service Roles
      </title>
      
      <p>
        The following are <i>query service</i> roles:
      </p> 
      
      <table>
        <title>Query Service Roles</title>
        <tgroup cols="2">
          <colspec colname="col1" colwidth="1*"/>
          <colspec colname="col2" colwidth="1.76*"/>
          <thead>
            <row>
              <entry>Role-Name</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
            
            <row>
              <entry><codeph>manage_index[...]</codeph></entry>
              <entry>
                Allows the user to create and delete indexes on the specified buckets. To
                give a user the ability to create and delete indexes on all buckets set
                their role to manage_index[*]. To give the user permission to create and
                delete indexes on a single bucket named 'default' then specify their role
                as manage_index[default]. If the user needs to be create and delete indexes
                for multiple buckets, for example 'default' and 'app', then set their role
                as manage_index[default,app].</entry>
            </row>
            
            <row>
              <entry><codeph>query_delete[...]</codeph></entry>
              <entry>
                Allows the user to execute DELETE query statements on the specified buckets.
                To give a user the ability execute DELETE statements on all buckets set
                their role to query_delete[*]. To give the user permission to execute
                DELETE statements on a single bucket named 'default' then specify their role
                as query_delete[default]. If the user needs to be execute DELETE statements
                for multiple buckets, for example 'default' and 'app', then set their role
                as query_delete[default,app].</entry>
            </row>
            
            <row>
              <entry><codeph>query_insert[...]</codeph></entry>
              <entry>
                Allows the user to execute INSERT query statements on the specified buckets.
                To give a user the ability execute INSERT statements on all buckets set
                their role to query_insert[*]. To give the user permission to execute
                INSERT statements on a single bucket named 'default' then specify their role
                as query_insert[default]. If the user needs to be execute INSERT statements
                for multiple buckets, for example 'default' and 'app', then set their role
                as query_insert[default,app].</entry>
            </row>
            
            <row>
              <entry><codeph>query_select[...]</codeph></entry>
              <entry>
                Allows the user to execute SELECT query statements on the specified buckets.
                To give a user the ability execute SELECT statements on all buckets set
                their role to query_select[*]. To give the user permission to execute
                SELECT statements on a single bucket named 'default' then specify their role
                as query_select[default]. If the user needs to be execute SELECT statements
                for multiple buckets, for example 'default' and 'app', then set their role
                as query_select[default,app].</entry>
            </row>
            
            <row>
              <entry><codeph>query_update[...]</codeph></entry>
              <entry>
                Allows the user to execute UPDATE query statements on the specified buckets.
                To give a user the ability execute UPDATE statements on all buckets set
                their role to query_update[*]. To give the user permission to execute
                UPDATE statements on a single bucket named 'default' then specify their role
                as query_update[default]. If the user needs to be execute UPDATE statements
                for multiple buckets, for example 'default' and 'app', then set their role
                as query_update[default,app].</entry>
            </row>
            
            <row>
              <entry><codeph>system_catalog[...]</codeph></entry>
              <entry>
                Allows the users to run queries against the system catalog on the specified
                buckets. To give a user the ability to run queries against the system
                catalog on all buckets set their role to system_catalog[*]. To give the user
                permission to run queires against the system catalog on a single bucket
                named 'default' then specify their role as system_catalog[default]. If the
                user needs to be run queries against the system catalog for multiple
                buckets, for example 'default' and 'app', then set their role as
                system_catalog[default,app].</entry>
            </row>
          </tbody>
        </tgroup>
      </table> 
    </section>
    
    
    
            
            
    
    <section>
      <title>
        Examples
      </title>
      
      <p>
        To create an builtin RBAC user profile for a user named "John Doe" with username
        jdoe and password cbpass with roles to manage the 'default' bucket and all
        XDCR replication run the following command:
      </p>
      
      <codeblock>$ couchbase-cli user-manage -c 127.0.0.1:8091 -u Administrator \
-p password --set --rbac-username jdoe --rbac-password cbpass \
--rbac-name "John Doe" --roles bucket_admin[default],replication_admin \
--auth-type builtin</codeblock>   
      
      <p>
        If you have saslauthd setup in your cluster and you want to add a user
        "John Doe" with username jdoe who should have the ability to manage only views
        for all bucket run the following command
      </p>
      
      <codeblock>$ couchbase-cli user-manage -c 127.0.0.1:8091 -u Administrator \
-p password --set --rbac-username jdoe --rbac-name "John Doe" \
--roles view_admin[*] --auth-type saslauthd</codeblock> 

      <p>To list the current RBAC user profiles run the following command:</p>
      
      <codeblock>$ couchbase-cli user-manage -c 127.0.0.1:8091 -u Administrator \
-p password --list</codeblock>
      
      <p>
        To delete a saslauthd user named jdoe run the following command:
      </p>
      
      <codeblock>$ couchbase-cli user-manage -c 127.0.0.1:8091 -u Administrator \
        -p password --delete --rbac-username jdoe --auth-type saslauthd</codeblock>
      
      <p>
        To delete a local user named jdoe run the following command:
      </p>
      
      <codeblock>$ couchbase-cli user-manage -c 127.0.0.1:8091 -u Administrator \
-p password --delete --rbac-username jdoe --auth-type builtin</codeblock>
      
      <p>
        To see the user profile for a user with the username jdoe and password cbpass
        run the following ommand
      </p>
      
      <codeblock>$ couchbase-cli user-manage -c 127.0.0.1:8091 -u jdoe -p cbpass \
--my-roles</codeblock>
    
    </section>
    
    <section>
      <title>
        Environment Variables
      </title>
      
      <p>
        The following environment variable can be used:
      </p> 
      
      <table>
        <title>CB_REST_PASSWORD</title>
        <tgroup cols="2">
          <colspec colname="col1" colwidth="1"/>
          <colspec colname="col2" colwidth="1.76"/>
          <thead>
            <row>
              <entry>Variable-Name</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody>
      
      <row>
        <entry><codeph>CB_REST_PASSWORD</codeph></entry>
        <entry>
          Specifies the password of the user executing the command. This environment
          variable allows you to specify a default argument for the -p/--password
          argument on the command line. It also allows the user to ensure that their
          password are not cached in their command line history.</entry>
      </row>
      </tbody>
      </tgroup>
      </table> 
    </section>

    

    
  </refbody>
</reference>
