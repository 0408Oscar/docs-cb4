<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_zrw_kth_t5">
  <title>What's new in version 4.5 - Developer Preview?</title>
  <body>
    <p>Couchbase Server 4.5 leaps forward with faster, simpler, and more secure data processing.</p>
    <section><title>Faster</title>
      <p>Couchbase Server added prepared execution of N1QL statements and covering indexes for faster queries. Query and Indexing get another boost with version 4.5.</p>
      <dl>
        <dlentry>
          <dt>Memory Optimized Global Indexes</dt>
          <dd>Version 4 of Couchbase Server introduced <xref
              href="http://developer.couchbase.com/documentation/server/4.1/architecture/global-secondary-indexes.html"
              format="html" scope="external">global indexes</xref> which are <xref
              href="http://developer.couchbase.com/documentation/server/4.1/architecture/services-archi-multi-dimensional-scaling.html"
              format="html" scope="external">independently
                partitioned</xref> away from data for faster N1QL queries. With the new
            memory optimized global indexes in 4.5, Couchbase Server provides further tuning for
            in-memory index processing and index scans for the lowest latencies with N1QL. Unlike
            other databases where indexes impact the performance of mutations, data ingest and DML
            through SQL INSERT UPDATE and DELETE, these new memory-optimized global indexes provide
            a fresh index that is up to date under aggressive mutation rates without impacting the
            incoming database workload. You can enable the new memory-optimized global indexes
            through the index settings under the “Settings” tab in the admin console.</dd>
        </dlentry>
        <dlentry>
          <dt>Indexing Embedded Arrays</dt>
          <dd>Couchbase Server provides native data model that can easily represent complex
            relationships in a simple natural document. In relational databases, “Movies” and
            “Showtimes” would be 2 separate tables, whereas in the native document database like
            Couchbase Server, data model naturally adapts to the applications representation or
            movies which would be a single “Movie” instance that contain a “Showtimes” array. N1QL
            Provides a great deal of verbs around array processing embedded structures and arrays
            such as UNNEST and ANY/EVERY operators. With the new Array Indexing, developers can
            optimize execution of the queries. The new index can optimize queries that are looking
            for showtimes through indexes. You can index embedded arrays using the new ALL keyword
            in <xref
              href="http://developer.couchbase.com/documentation/server/4.1/n1ql/n1ql-language-reference/createindex.html"
              format="html" scope="external">CREATE INDEX statement</xref> in N1QL.</dd>
        </dlentry>
        <dlentry>
          <dt>Faster Read-Your-Own-Write Consistency (RYOW) with N1QL Queries</dt>
          <dd>Couchbase Server 4.0 provides queries with N1QL and Map/Reduce Views that have tunable consistency guarantees for improved query performance. Today developers can query data using eventual or strict consistency flag (see “staleness” flags for details). With strictly consistent queries, “staleness” option is set to “false” per query. This ensures that results of the query are generated using the request timestamp token. With the new RYOW flag, you can grab timestamp tokens from your last update that will ensure you can read your last update instead of the query request timestamp token. Couchbase Server is a database that can process very high mutation rates sometimes at millions of mutations a second. RYOW latency provides a great optimization for applications that have to deal with high mutation rates but cannot compromise on consistency guarantees. 
            You can utilize the new RYOW capabilities through the SDKs using the new <varname>XYZ</varname> flag.
          </dd>
        </dlentry>
        <dlentry>
          <dt>Improved Index Write Performance with Circular Reuse</dt>
          <dd>Global Indexes uses the new ForestDB engine for index storage. ForestDB uses an
            append-only architecture (you can find more details on forestDB architecture here). Full
            compaction is run as pages are “orphaned” with the appending writes. With version 4.5,
            ForestDB provides circular reuse as an alternative to full compaction model. Circular
            reuse reduces the disk size and IO bandwidth demands for indexes and reduces the
            requirement for running frequent full compaction operations. This improves the overall
            index maintenance and index read and write performance greatly for global indexes. You
            can turn on the “circular reuse” through the “Settings” tab in admin console. <p>N1QL
              also added a number of new optimizations for LIMIT and ORDER BY and improved rules for
              covering more queries as well as 100s of quality improvements. These advances in
              version 4.5 pile onto the additional performance advancements delivered in version
              4.1: Specifically prepared statements and covering indexes which can help speed up
              queries by eliminating portions of the work in the execution plan.</p></dd>
        </dlentry>
        </dl>
    </section>
    <section><title>Simpler</title>
      <p>Development and administration becomes much simpler with Couchbase Server 4.5. </p>
      <dl>
        <dlentry>
          <dt>Advanced Partial Updates and Data Structures</dt>
          <dd>With Couchbase Server 4.5, applications no longer have to address the entire document. With the extended APIs, developers can simply operate on parts of a document without having to send the entire document back and forth between client and server. This bring in great performance and efficiency to the network IO path especially when documents are larger in size in the system.
          </dd>
        </dlentry>
        <dlentry>
          <dt>Integrated Query Workbench</dt>
          <dd>With version 4.5 we not provide a simple and visual way to develop and design queries. Query workbench allows executing ad hoc queries directly from the console to help developers and administrators interact with the system in development, test and product environments. 
            To use the new integrated query workbench, simply switch to the new Query tab in the admin console.</dd>
        </dlentry>
        <dlentry>
          <dt>Flexible JOINs in N1QL</dt>
          <dd>With version 4.5, N1QL introduces an extended JOIN syntax for added flexibility in JOINs. With the new JOIN ON KEY … FOR keyword, allows developers to specify JOIN operations that can use the left or the right keyspace for the JOIN. With the addition of the extended syntax, N1QL also allows much better use of indexes to perform the JOIN operation faster across the 2 sides and greatly lowers JOIN latencies.  
            For example;
            <codeblock>SELECT * FROM Playlists JOIN Songs ON KEY</codeblock> 
            You can find more about the new JOIN syntax here. </dd>
        </dlentry>
        <dlentry>
          <dt>Query Profiling</dt>
          <dd>N1QL adds a number of new keyspaces under “system:” namespace to the existing list that allows listing indexes, buckets and more. The new keyspaces under System: allow monitoring active executions, connections and more.
            For a full list of new system keyspaces added to N1QL, please visit the details page.</dd>
        </dlentry>
        <dlentry>
          <dt>Advanced Command-line Tooling for Query</dt>
          <dd>In previous releases cbq command line tool has been the central point for executing N1QL queries. Command line access to N1QL has been greatly advanced in this release. The new command line access provides smart connection management and full scriptability with version 4.5.</dd>
        </dlentry>
        <dlentry>
          <dt>Enterprise Backup and Restore</dt>
          <dd>With Couchbase Server 4.5, we provide a new enterprise backup and restore tool that can backup larger datasets with much higher performance. The backup and restore capabilities are critical to ensuring disaster recovery and business continuity and with a scalable and high performance backup restore, Couchbase Server can provide faster recovery with better RTO (recovery time objective) and RPO (recovery point objective).
            You can find detailed information about the new enterprise backup tool here. 
            
            In addition to the list of enhancements above, version 4.5 also simplifies administration under large node counts (>100 node clusters). With the new version, Couchbase Server natively supports Debian 8 in addition to all the existing platforms.</dd>
        </dlentry>
      </dl>
    </section>    <section><title>Secure</title>
      <dl>
        <dlentry>
          <dt>Role Based Access Control (RBAC) for Administrators </dt>
          <dd>With version 4.5, Couchbase Server provides role based access control for administrators. Aside from the existing encryption and auditing facilities, RBAC provides fine grain control over administrative access and simplifies compliance with governance rules.
            You can control administrative roles using the settings tab in the admin console.
            
            X509 Certificate Use Certificates for Encryption
            Version 4.5 also adds support for custom X509 certificates for encrypted communication for applications, queries and administrators. The new capability makes it simple for administrators to rotate certificates and keep communications highly secure.
            You can find detailed information about the new customer certificate facility here.</dd>
        </dlentry>
      </dl>
    </section>
    
  </body>
</topic>
