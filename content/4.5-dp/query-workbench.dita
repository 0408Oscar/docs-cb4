<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_prr_nyh_t5">
  <title>Query workbench</title>
  <body>
    <p>The query workbench provides a rich graphical user interface to perform query development.
      Using the query workbench, you can conveniently browse data, create, edit, and save queries,
      run N1QL statements and scripts, manipulate and export data, and view and save results - all
      in a single window. </p>
    <p>Some salient features of the query workbench include: <ul>
      <li>Single, visual interface to perform query development and testing.</li>
      <li>Enables easy viewing and editing of complex queries by providing features such as multi-line formatting, copy-and-paste, and easy cursor movement. </li>
      <li>Provides ability to view the structure of documents in a bucket by using the N1QL <cmdname>describe</cmdname> command. You no longer have to select the documents at random and guess the structure of the document.</li>
      <li>Displays query results in multiple formats: JSON, table,and tree. You can also save the query results to a file on disk.</li>
    </ul></p>
    <p>The query workbench is now integrated with the Couchbase Web console and is available on the
        <uicontrol>Query</uicontrol> tab. <note>The Web console displays the
          <uicontrol>Query</uicontrol> tab only if the Query service is running on the
      node.</note></p>
    <p><b>Supported platforms</b></p>
    <p>The query workbench is supported on Windows, Linux, and Mac OS X platforms. <note type="important">This is a developer preview version of Couchbase Server 4.5 and is intended for development purposes only.
      We consider developer preview releases to have some rough edges and bugs, and may change significantly before the final GA release. This release is <b>not supported</b> in production.</note></p>
    <p>The query workbench consists of three working areas as shown in the image below: <ol>
        <li>N1QL Editor</li>
        <li>Bucket Analyzer/Analysis</li>
        <li>Results</li>
      </ol><image placement="break" href="pict/query-workbench-areas.png" width="6in"
        id="image_ogl_zfq_y5"/></p>
    <section id="n1ql-editor"><title>N1QL Editor</title>
      <p>The N1QL editor is a visual designing area where you can build simple or complex queries,
        and test the queries using the <uicontrol>Execute</uicontrol> button. The N1QL editor provides the following additional features: <ul>
          <li>Auto-completion - When entering a keyword in the N1QL editor, if you enter the <userinput>tab</userinput> key or <userinput>Ctrl+Space</userinput>, the tool offers a list of matching N1QL keywords and bucket names that are close to what you have typed so far. For names that have a space or a hyphen (-), the auto-complete option includes back quotes around the name. If you expand a bucket in the Bucket Analyzer, the tool learns and includes the field names from the schema of the expanded bucket.</li>
          <li>Query history - The tool maintains a history of all the queries executed in a given session. Use the
            arrow keys at the top of the editor to navigate through the history. If you edit a previous query and execute it, the new query is stored at the end of the history.  <note>Clearing the browser history clears the history maintained by the N1QL Editor as well.</note></li>
          <li>Result limit - You can limit the number of results to be displayed by specifying a value for this field. This ensures that the result set is not larger than the specified value. By default, the result limit is set to 500 and the arrows increment and decrement the limit by 50. <note>Large result sets can slow the responsiveness of the interface.</note></li>
          <li>Support for N1QL INFER statements - The tool supports a preview of the N1QL INFER
            statement. This command infers a schema for a bucket by examining a random sample of
            documents. Because the command is based on a random sample, the results may vary
            slightly from run to run. The default sample size is 1000 documents. The syntax of the
            command is: <codeblock>INFER <varname>bucket-name</varname> [ LIMIT <varname>sample-size</varname> ]; </codeblock><fig id="fig_fdv_55q_y5">
              <title>Sample INFER statement</title>
              <image placement="break" href="pict/query-workbench-infer-sample.png" width="5.5in"
                id="image_gdv_55q_y5"/>
            </fig></li>
          <li>Save query - You can save a query to an external text file using the <uicontrol>Save Query</uicontrol>
            button. By default, the query is saved as a text file (.txt) in the Downloads directory.<note>When using Safari, clicking <uicontrol>Save</uicontrol> loads the data into a new window. You have to save the file manually using the <menucascade><uicontrol>File</uicontrol> <uicontrol>Save As</uicontrol></menucascade> menu.</note>
            <note>Need inputs for other operating systems - is the default location still Downloads?</note></li>
        </ul></p>
    </section>
    <section id="bucket-analyzer"><title>Bucket Analyzer</title>
      <p>The bucket analyzer displays all the buckets installed in the cluster. The buckets are grouped into the following categories based on the indexes created for the bucket: <ul>
        <li><b>Fully Queryable Buckets</b>: Contain a primary index or a primary index and secondary indexes.</li>
        <li><b>Queryable on Indexed Fields</b>: Do not contain a primary index, but have one or more secondary indexes.</li>
        <li><b>Non-Indexed Buckets</b>: Do not contain any indexes. These buckets do not support queries. You must first define an index before querying these buckets. </li>
      </ul></p>
      <p>With the Enterprise Edition, you can expand the buckets to view the schema. The result is the same as using the INFER command on the <cmdname>cbq shell</cmdname>. The analyzer scans a sample of 1000 documents and displays multiple flavors of the schema. the bucket and </p>
    </section>
    <section id="results"><title>Results</title>
      <p>When you execute a query, the results are displayed in the result area. You can choose to view the result in one of the following formats: <ul>
        <li>JSON (default), where the results are formatted to make the data easy to read. You can
            also expand and collapse objects and array values using the little arrow icons next to
            the line numbers. <image placement="break" href="pict/query-workbench-result-json.png"
              width="5.5in" id="image_uqm_h5q_y5"/></li>
        <li>Table, where the results are presented in a tabular format. The tool converts the JSON
            documents to HTML tables, and presents sub-objects or sub-arrays as sub-tables. This
            format works well for queries that return an array of objects, like <codeph>select
              `beer-sample`.* from `beer-sample`;</codeph>. It is not suitable for queries that
            return an array of objects where each object has a sub-object, like <codeph>select *
              from `beer-sample`;</codeph>. <image placement="break"
              href="pict/query-workbench-result-table.png" width="5.5in" id="image_pjv_35q_y5"/>
          </li>
        <li>Tree (or list), where the results are presented in a tree (or list or outline) format.
            Each sub-object or sub-array is displayed as a sub-list. <image placement="break"
              href="pict/query-workbench-result-tree.png" width="5.5in" id="image_znv_j5q_y5"/></li>
      </ul></p>
    </section>
  </body>
</topic>
