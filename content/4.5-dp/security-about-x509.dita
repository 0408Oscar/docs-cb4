<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_xmh_m4m_s5">
  <title>Rotating X.509 certificates</title><shortdesc>Rotate a certificate when it expires or a widespread breach occurs.</shortdesc>
  
  
  
  
  <body>
     <section><title>Introduction</title>
       <p>Certificate rotation is needed when a certificate expires, if you are considering moving from an old CA authority to a new CA authority, 
         there is a change in the policy of the certificates issued by the CA, 
         or in the case of a widespread breach of security occurs in the system.</p>
       <p>X.509 certificate rotation in Couchbase is an online operation and does not require a node or cluster restart. 
         You can be reassured that the application will have continued access to Couchbase without getting hit with a
         downtime during the rotation operation.</p>
       
       
     </section>
    <section><title>How to rotate an X.509 certificate in Couchbase</title>
      
      
      <ol>
        <li>Before you rotate a certificate, you need to generate a new one. 
          <p>Typically, your Certificate Authority (CA) will give you a self-service option to
            reissue certificates. If this is not the case, you can manually regenerate your new
            X.509 certificate and <xref href="security-x509-setup.dita#topic_jn3_fzk_w5">configure
              it in Couchbase.</xref></p></li>
        <li>Before modifying anything on the server-side, deploy the CA public key and intermediate
          certificates in the certificate stores used by your client browser and SDK language.
            <p>For example, here are steps to do that for <xref
              href="http://www.cyberciti.biz/faq/firefox-adding-trusted-ca/" format="html"
              scope="external">Firefox</xref>, <xref
              href="http://blogmines.com/blog/how-to-import-a-certificate-in-google-chrome/"
              format="html" scope="external">Chrome</xref>, and <xref
              href="https://azure.microsoft.com/en-us/documentation/articles/java-add-certificate-ca-store/"
              format="html" scope="external">Java</xref>:</p></li>
        <li>Rotating certificates on the server.
          <p>The following strategies are presented as possible approaches to plan for CA renewal. 
            You may need to adapt these to your specific situation.</p>
        <ol>
          <li></li>
          <li></li>
          <li></li>
        </ol>
        
        
        
        </li>  
      </ol>
      <dl>
        <dlentry>
          <dt>Rotating certificates on the server</dt>
          <dd>Certificate rotation depends on its type: <ul>
              <li>Root CA certificate Rotation: <term>Root certificates</term> usually have a very
                long life to avoid re-issuing of all certificates for which they are the trusted
                anchor. The root Certificate Authority (CA) is the topmost CA in a CA hierarchy.
                  <p>Rotate the root certificate using CLI (example)</p>
                <p>Rotate the root certificate using REST (example)</p>
              </li>
              <li>Intermediate certificate rotation: All operating systems and web browsers contain
                a set of default trusted root certificates. In most deployments, single-tier CA
                hierarchies are rare, and CA root certificates are not used directly to sign the
                cluster certificate. Instead, with commonly used N-tier hierarchies, so-called
                  <term>intermediate certificates</term> are used because they  can be rotated more
                frequently than the root CA certificate. <p>More info TBA</p>
                <p>Rotate the intermediate certificate using CLI example</p>
                <p>Rotate the intermediate certificate using REST example</p>
              </li>
              <li>Node certificate rotation: TBA</li>
            </ul></dd>
          
        </dlentry>
      </dl>
    
    </section>
    <section><title>Troubleshooting X.509 certificates</title>
    <dl>
      <dlentry>
        <dt>Verifying and debugging SSL traffic</dt>
        <dd>During the development process these external tools might come in handy for verifying
            and debugging SSL traffic: <ul>
              <li><cmdname>openssl</cmdname>: OpenSSL command line tool</li>
              <li>wireshark: Network traffic analyzer</li>
              <li>nmap: Sophisticated security scanner</li>
            </ul>
          </dd>
      </dlentry>
    </dl>
  <dl>
    <dlentry>
      <dt>Viewing the certificate content</dt>
      <dd>You can also view a certificate and verify its content. </dd>
    </dlentry>
  </dl>    
    </section>
    <section><title>Cloud consideration for certificate rotation</title>
    <dl>
      <dlentry>
        <dt>AWS Load Balancers</dt>
        <dd>If you are using AWS Load Balancers with SSL termination, you can upload the new
            certificate, key and intermediate certificate by clicking on the
              <uicontrol>Change</uicontrol> link under <wintitle>Listeners</wintitle>. </dd>
      </dlentry>
    </dl>
      
    </section>
  </body>
</topic>
