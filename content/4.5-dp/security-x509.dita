<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_gp4_1yl_s5">
  <title>Certificate-based authentication</title>
  <shortdesc>Couchbase Server Enterprise Edition now supports CA-based certificates. </shortdesc>
  <body>
    <p>In addition to a username- and password-based authentication, Couchbase Server supports
      certificate-based authentication to configure a client with a secure connection to Couchbase
      Server.  </p>
    <p>In version 3, Couchbase introduced self-signed certificates using Couchbase as the root
      signing authority. The self-signing certificates are still supported both for the Couchbase
      Server Enterprise Edition and Community Edition.</p>
    <p>In this release support in the Enterprise Edition is extended to X.509 certificates signed
      and trusted by Certificate Authorities (CAs) selected by the Couchbase users. </p>
    <p>Company security teams who want to have control over the primary (root) certificate (for
      example, to set its expiry date), can choose the certificate hierarchies and obtain a
      certificate to configure clients. </p>
    <note type="note">Your prior knowledge about TLS/SSL, PKI certificates including X.509
      certificates, and Certificate Authorities (CAs) is assumed for this overview. </note>
    
  
   
    <section>
      <title>CAs and certificate hierarchies </title>
      
     
      <dl>
        <dlentry>
          <dt>Root CA</dt>
          <dd>Each Certificate Authority (CA) hierarchy starts with the root CA, which provides
            certificates for multiple CAs that branch in a parent-child relationship. Root
            certificates usually last very long (around 20 years) to avoid re-issuing of all
            certificates for which they provide the trust anchor. <p>The single-tier CA hierarchy
              contains only the root CA and no other subordinate CA authorities.</p><p>A root
              certificate is a private key used to "sign" intermediate certificates. All
              certificates immediately below the root certificate inherit the trustworthiness of the
              root certificate.</p></dd>
        </dlentry>
      </dl>
      
      <dl>
        <dlentry>
          <dt>Intermediate CA</dt>
          <dd>The two-tier CA hierarchy contains the root CA as well as the subordinate intermediate
            CAs. Intermediate certificates generated by the intermediate CAs are used to sign the
            client certificates such as a node certificate.<p>Intermediate certificates have a
              shorter life than the root certificate and are replaced according to company's
              policies. When you need to regenerate the intermediate certificate, follow the
              directions for<xref href="security-about-x509.dita#topic_xmh_m4m_s5"/> to avoid
              breaking the connection between the root certificate and the client certificate that
              belongs to its chain. </p></dd>
        </dlentry>
      </dl>
      
     
    </section>
     
    
    <section>
      <title>Certificate types</title>
      
      <dl>
        <dlentry>
          <dt>Self-signed certificates</dt>
          <dd>Self-signed certificates, which are used for client-server and XDCR encryption, are
            generated and signed by Couchbase Server as the root CA.</dd>
        </dlentry>
      </dl>   
      <dl>
        <dlentry>
          <dt>X.509 certificates</dt>
          <dd><p>X.509, which assumes a strict hierarchical system of Certificate Authorities (CAs) for issuing
              the certificates, specifies formats for public key certificates, certificate
              revocation lists, attribute certificates, and a certification path validation
              algorithm.</p>
            <p>Couchbase Server will accept an X.509 certificate as valid if it meets the following
              requirements:</p>
            
            <ul>
              <li>The current system time must fall between the times set in the certificate's properties
                <codeph>valid from</codeph> and <codeph>valid to</codeph>. </li>
              <li>The node certificate must be designated for server authentication. It is set in the
                optional field of the certificate's property <codeph>enhanced key usage</codeph> as
                <codeph>Server Authentication</codeph>. </li>
              <li>Be sure to follow these certificate requirements: <ul>
                <li>Common name: This is a wildcard for a certificate or node name.</li>
                <li>Key length: 2048 bits or higher.</li></ul></li>
            </ul>
            <p>The certificate should also pass the <xref
              href="https://www.openssl.org/docs/manmaster/apps/verify.html" format="html"
              scope="external">OpenSSL validate certificate test</xref>. </p></dd>
        </dlentry>
      </dl>
        
    </section> 

  </body>
</topic>
