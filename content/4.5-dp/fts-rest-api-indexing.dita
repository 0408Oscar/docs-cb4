<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_hpd_2y4_1v">
  <title>Indexing</title>
  <body><section><title>Index Definition</title>
    <dl>
      <dlentry>
        <dt>GET /api/index</dt>
        <dd>Returns all index definitions as JSON. <p><b>Permission
             Required:</b></p><p>cluster.bucket[<varname>bucket_name</varname>].fts!read</p><codeblock spectitle="Sample Response">{
    "indexDefs": {
        "implVersion": "4.0.0",
        "indexDefs": {
            "myFirstIndex": {
            "name": "myFirstIndex",
            "params": "",
            "planParams": {
                "hierarchyRules": null,
                "maxPartitionsPerPIndex": 0,
                "nodePlanParams": null,
                "numReplicas": 0,
                "planFrozen": false
             },
             "sourceName": "",
             "sourceParams": "",
             "sourceType": "nil",
             "sourceUUID": "",
             "type": "blackhole",
             "uuid": "6cc599ab7a85bf3b"
          }
       },
       "uuid": "6cc599ab7a85bf3b"
    },
    "status": "ok"
}</codeblock></dd>
      </dlentry>
      <dlentry>
        <dt>GET /api/index/{indexName}</dt>
        <dd>Returns the definition of an index as JSON. <p><b>Permission Required:
                </b></p><p>cluster.bucket[<varname>bucket_name</varname>].fts!read</p>
            <p>param: indexName: required, string, URL path parameter</p><p>The name of the index
              definition to be
            retrieved.</p><codeblock spectitle="Sample response">{
    "indexDef": {
        "name": "myFirstIndex",
        "params": "",
        "planParams": {
            "hierarchyRules": null,
            "maxPartitionsPerPIndex": 0,
            "nodePlanParams": null,
            "numReplicas": 0,
            "planFrozen": false
        },
        "sourceName": "",
        "sourceParams": "",
        "sourceType": "nil",
        "sourceUUID": "",
        "type": "blackhole",
        "uuid": "6cc599ab7a85bf3b"
      },
      "planPIndexes": [
        {
         "indexName": "myFirstIndex",
         "indexParams": "",
         "indexType": "blackhole",
         "indexUUID": "6cc599ab7a85bf3b",
         "name": "myFirstIndex_6cc599ab7a85bf3b_0",
         "nodes": {
            "78fc2ffac2fd9401": {
              "canRead": true,
              "canWrite": true,
              "priority": 0
            }
         },
         "sourceName": "",
         "sourceParams": "",
         "sourcePartitions": "",
         "sourceType": "nil",
         "sourceUUID": "",
         "uuid": "64bed6e2edf354c3"
         }
       ],
       "status": "ok",
       "warnings": []
}</codeblock></dd>
      </dlentry>
      <dlentry>
        <dt>PUT /api/index/{indexName}</dt>
        <dd>Creates/updates an index definition. <p><b>Permission Required:
        </b></p><p>cluster.bucket[<varname>bucket_name</varname>].fts!write</p>
          <p><b>param</b>: <parmname>indexName</parmname>: required, string, URL path parameter</p><p>The name of the to-be-created/updated index definition, validated with the regular expression <codeph>^[A-Za-z][0-9A-Za-z_\-]*$</codeph>.</p><p><b>param</b>:<parmname>indexParams</parmname>: optional (depends on the value of the indexType), string (JSON), form parameter <ul>
            <li>For indexType <userinput>alias</userinput>, an example indexParams
                  JSON:<codeblock>{
    "targets": {
        "yourIndexName": {
            "indexUUID": ""
        }
     }
}</codeblock></li>
            <li>For indexType <userinput>blackhole</userinput>, the indexParams can be null.</li>
            <li>For indexType <userinput>bleve</userinput>, an example indexParams JSON:
                  <codeblock>{
    "mapping": {
        "default_mapping": {
            "enabled": true,
            "dynamic": true,
            "default_analyzer": ""
         },
         "type_field": "_type",
         "default_type": "_default",
         "default_analyzer": "standard",
         "default_datetime_parser": "dateTimeOptional",
         "default_field": "_all",
         "byte_array_converter": "json",
         "analysis": {}
     },
     "store": {
          "kvStoreName": "boltdb"
     }
}</codeblock></li></ul></p><p><b>param</b>:<parmname></parmname> </p><p><b>param</b>:<parmname></parmname> </p></dd>
      </dlentry>
    </dl>
    
  </section>
    <section><title>Index Management</title>
      
    </section>
    <section><title>Index Monitoring</title>
      
    </section> 
    <section><title>Index Querying</title>
      
    </section>
  </body>
</topic>
