<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<<<<<<< HEAD
<topic id="whats-new">
	<title>What's new in Couchbase Server 4.1</title>
	<shortdesc>Building on the landmark Couchbase Server 4.0 release, Couchbase Server 4.1 delivers significant advances, primarily in query performance and functionality, that will benefit both developers and the enterprise. </shortdesc>
	<body>
		<p>Specifically, Couchbase Server 4.1 includes over 300 improvements in scalability and performance, and enables the following new capabilities:</p>
		<section> <title>N1QL: Complete SQL CRUD support with N1QL for batch and OLTP applications</title>
			<p>Common SQL statements, such as INSERT, UPDATE, DELETE, MERGE and UPSERT are now fully supported in Couchbase Server 4.1.  The benefit is that you can now manipulate JSON documents with N1QL and fully support all query requirements of enterprise Web, Mobile, and IoT applications.</p>
			<p>For more detail, the N1QL INSERT statement allows both singleton and multi-document inserts.
				UPDATE and DELETE enable the manipulation of a set of documents based on specific
				criteria. Both of these statements use available indices to efficiently identify and
				update documents. The UPSERT and MERGE statements merge two sets of documents based
				on given criteria. All of these traditional SQL statements have been adapted to
				support JSON documents.</p>
			<p>The SQL statements are fully supported in Couchbase SDKs, REST APIs, and Simba’s JDBC and ODBC drivers.</p>
		</section>
		<section><title>Low latency queries with covering indexes and prepared statements</title>
			<p><b>Covering indexes</b></p>
			<p>By definition, a Covering Index is an index that contains at minimum all the fields required by a specific query.  What this means for your application, is that covering indexes will help a query run faster. With a standard index, a query execution flow will initially scan the index service for data, but would then have to spend additional time to scan the data service to complete the query.  By using a Covering Index, only the scan of that Covering Index is required for data access.  The result is lower query latency and a faster performing application.</p>
			<p>For more detail, N1QL queries use available indices to efficiently execute the query. When a query only needs to reference the key attributes of the chosen index, it can avoid fetching the full document to answer the query. The query will then take fewer resources and run faster.  In addition, the N1QL query engine exploits the index ordering to avoid data sorting when the index keys match the key attributes in ORDER BY clause.</p>
			<p><b>Prepared statements</b></p>
			<p>A prepared statement enables execution of the same, or similar, query many times with high
				efficiency by avoiding repeated query parsing and preparation. Many applications
				require repeated execution of predefined queries with only different parameters.
				Performing these repeated queries as ad hoc statements requires query parsing,
				planning and execution each time. Using a Prepared Statement template, where the
				execution plan is fixed and only specific variables are substituted each time the
				query is run, removes the overhead required to parse and compile an execution plan
				for these often-repeated queries. The result is lower latency and reduced CPU cycles
				– and a faster performing application.</p></section>
		<section><title>Additional certified platforms</title>
			<p>Couchbase Server 4.1 is now certified to run on both Windows 10 and the Mac OS X 10.11 (El Capitan) platforms in addition to the existing <xref href="../install/install-platforms.dita">supported platforms</xref>.</p></section>
		<p>See <xref href="whats-new-40.dita"/> for a quick look at what was new in the 4.0 release.</p>
	</body>
=======
<topic id="topic_zrw_kth_t5">
  <title>What's New in Version 4.5?</title>
  <body>
    <p>Couchbase Server 4.5 builds on the advances of version 4 with faster, simpler, and more
      secure data processing. The new features include memory-optimized global indexes, indexing of
      embedded arrays, the ability to make partial updates to a document, a Query Workbench in the
      Web Console, flexible JOINS with N1QL, and a new, resilient enterprise backup and restore.
        <note type="important">This is a Beta version of Couchbase Server 4.5 and is intended for
        development purposes only. We consider Beta releases to have some rough edges and bugs, and
        may change significantly before the final GA release. This release is <b>not supported</b>
        in production. <p>The Beta release does <b>not support</b> upgrading from an earlier version
          of Couchbase Server.</p></note></p>
    <section><title>Faster</title>
      <p>Couchbase Server version 4.5 enables faster queries with memory-optimized global indexes
        and array indexing. These, along with the features added in version 4.1 such as prepared
        execution of N1QL statements and covering indexes, give querying and indexing a significant
        boost.</p>
      <dl>
        <dlentry>
          <dt>Memory-Optimized Global Indexes</dt>
          <dd>Version 4 of Couchbase Server introduced <xref href="../architecture/global-secondary-indexes.dita"></xref> which are <xref href="../architecture/services-archi-multi-dimensional-scaling.dita">independently partitioned</xref> away from data for
            faster N1QL queries. Couchbase Server 4.5 provides additional tuning for index
            processing and index scans. The new memory-optimized indexing provide a fresher index
            under heavy mutation rates (INSERT/UPDATE/DELETE) and powers lower latency queries.
            Unlike other databases, Couchbase Server global indexes are built to isolate impact of
            indexing on performance of mutations, data ingest, and bulk data modifications using
            N1QL INSERT, UPDATE, DELETE and MERGE statements. Couchbase Server 4.5 memory-optimized
            indexes further enhances index processing and isolation of impact of indexing on the
            incoming workload. <p>You can enable the new memory-optimized global indexes through the index settings under the <uicontrol>Settings</uicontrol> tab in the Couchbase Server Web Console. For more information, see <xref href="../architecture/in-memory-indexes.dita"/>.</p></dd></dlentry>
        <dlentry>
          <dt>Array Indexing</dt>
            <dd>N1QL provides a considerable number of verbs to process embedded structures and
            arrays such as <codeph>UNNEST</codeph> and <codeph>ANY</codeph>/<codeph>EVERY</codeph>
            operators. With the new array indexing feature, developers can optimize the execution of
            the queries. The new index can optimize queries that are looking for specific arrays.
            Arrays are indexed using the new DISTINCT ARRAY keyword in <xref
              href="../n1ql/n1ql-language-reference/createindex.dita">CREATE INDEX statement</xref> in N1QL. For more information, see <xref href="../n1ql/n1ql-language-reference/indexing-arrays.dita"/>. </dd>
        </dlentry>
       <dlentry>
          <dt>Faster Read-Your-Own-Write (RYOW) Consistency with N1QL Queries</dt>
          <dd>Tunable consistency for N1QL and MapReduce queries helps improve the query performance. Using the previous versions, you could query data using eventual or strict consistency flag. With strictly consistent queries, the staleness parameter is set to false per query, which ensures that the query uses the request timestamp token to generate the results. With version 4.5, you can choose to grab the timestamp tokens from your last update, which ensures that you read your last update instead of the query request timestamp token. RYOW consistency provides the optimization required by applications that have to deal with high mutation rates but cannot compromise on consistency guarantees. See <xref href="../developer-guide/query-consistency.dita"></xref> for details.</dd>
        </dlentry>
        <dlentry>
          <dt>Improved Index Write Performance with Circular Compaction</dt>
          <dd>Global indexes use the new ForestDB engine for index storage. ForestDB uses an
            append-only architecture where full compaction is run as and when pages are orphaned
            with the appending writes. With version 4.5, ForestDB introduces circular compaction as
            an alternative to full compaction. Circular compaction reduces the disk size and IO
            bandwidth demands for indexes and reduces the requirement to run frequent full
            compaction operations. This improves the overall index maintenance and index read and
            write performance greatly for global indexes. Circular compaction is enabled by default.
            You can change the compaction settings from the <menucascade>
              <uicontrol>Settings</uicontrol>
              <uicontrol>Auto-Compaction</uicontrol>
            </menucascade> tab on the Web Console. See <xref
              href="../architecture/storage-architecture.dita#concept_x13_xlj_vs/circular-reuse"/>
            for more information. </dd>
        </dlentry>
        <dlentry>
          <dt>Flexible Commutative JOIN in N1QL</dt>
          <dd>With version 4.5, N1QL introduces an extended <codeph>JOIN</codeph> syntax for added
            flexibility in JOINs. The new <codeph>JOIN ON KEY</codeph> … <codeph>FOR</codeph>
            keyword allows developers to specify JOIN operations that can use the left or the right
            keyspace for the JOIN. With the extended syntax, N1QL also makes better use of indexes
            to perform the JOIN operation faster across the two sides, and substantially lowers JOIN
            latencies. For example, <codeph>SELECT * FROM Playlists JOIN Songs ON KEY</codeph>.
            For more information, see <xref
              href="../n1ql/n1ql-language-reference/from.dita#concept_rnt_zfk_np/index-join"
            >Index Joins</xref>.</dd>
        </dlentry>
        <dlentry>
          <dt>Advanced Partial Updates and Data Structures</dt>
          <dd>With Couchbase Server 4.5, applications no longer have to address the entire document.
            With the extended APIs, developers can operate on parts of a document without having to
            send the entire document back and forth between client and server. The result is
            enhanced performance and efficiency in the network IO path, especially when documents in
            the system are large. For more information, see <xref href="../developer-guide/sub-doc-api.dita"></xref>-->. </dd>
        </dlentry>
        </dl>
    </section>
    <section><title>Simpler</title>
      <p>Development and administration become simpler with Couchbase Server 4.5. </p>
      <dl>
        <dlentry>
          <dt>Integrated Full Text Search (FTS) and new Search Service</dt>
          <dd>Full Text Search (FTS) enables you to create, manage, and query full text indexes on JSON documents stored in a Couchbase bucket. FTS provides a language-aware manner of searching with relevance ranking (scoring) for results. For more information on search service and full-text search, see <xref href="../fts/full-text-intro.dita"></xref>. <note>The Full Text Search feature is still considered experimental and the UI or the functionality may change.</note></dd>
        </dlentry>
        <dlentry>
          <dt>Integrated Query Workbench</dt>
          <dd>Couchbase Server 4.5 also provides a simple and visual way to develop and design
            queries with auto-complete for your N1QL statements. Query Workbench analyzes your
            bucket data to infer schemas of your document data and allows the execution of ad hoc
            queries directly from the Web Console. Query results are displayed in JSON, table, and
            tree formats, and can be saved. To use the new integrated Query Workbench, switch to the
            new <uicontrol>Query</uicontrol> tab in the Couchbase Server Web Console. For more
            information, see <xref href="../tools/query-workbench.dita"/>.</dd>
        </dlentry>
        <dlentry>
          <dt>Query Monitoring</dt>
          <dd>In Couchbase Server 4.5, N1QL adds several new keyspaces under the
              “<filepath>system:</filepath>” namespace to the existing list that provides
            information on indexes, buckets, and more. The new keyspaces under
              “<filepath>system:</filepath>" allow monitoring active requests, completed requests,
            system information and more. For a full list of new system keyspaces added to N1QL, see
              <xref href="../admin/query-monitoring.dita"/>. </dd>
        </dlentry>
<dlentry>
          <dt>Advanced Command-line Tooling for Query</dt>
          <dd>In previous releases, the <cmdname>cbq</cmdname> command line tool has been the
            central point for executing N1QL queries. Command line access to N1QL has been greatly
            improved in this release, and the new command line access provides smart connection
            management and full scriptability with version 4.5. For more information, see <!--<xref href="../developer-guide/cbq-shell.dita"></xref>-->.</dd>
        </dlentry>
        <dlentry>
          <dt>Enterprise Backup and Restore</dt>
          <dd>Couchbase Server 4.5 provides a new enterprise backup and restore tool that can back
            up larger datasets with significantly higher performance than before. The scalable,
            high-performance backup and restore tool allows Couchbase Server to provide faster and
            more scalable recovery options to better integrate with Disaster Recovery planning. See
              <xref href="../backup-restore/enterprise-backup-restore.dita#topic_rr5_sv3_t5"/> for detailed
            information.</dd>
         
        </dlentry>
      </dl>
      <dl>
        <dlentry>
          <dt>Support for Debian 8 Platform</dt>
          <dd>Couchbase Server 4.5 supports Debian 8 platform in addition to the platforms supported
            by the earlier version (version 4.1). See <xref
              href="../install/installation_beta.dita#topic_u5c_lks_w5/supported_platforms"/> for
            the complete list of supported platforms in this release. </dd>
        </dlentry>
        <dlentry>
          <dt>Additional Enhancements</dt>
          <dd>
            <ul>
              <li> N1QL enhancements such as array insert function, object add, put, and remove
                functions, and  more. 
              <ul>
                <li>Array insert function to insert a value into a specific position in an array and return the new array. See <xref href="../n1ql/n1ql-language-reference/arrayfun.dita"></xref> for details.</li>
                <li>New functions to add, put, and remove objects. See <xref href="../n1ql/n1ql-language-reference/objectfun.dita"></xref> for details.</li>
                <li>Duration to string conversion functions: Durations have been used consistently in the body of the results document (for example, elapsedTime) but now are also used in some keyspaces such as active_requests and completed_requests. The conversion functions support nano- (ns) , micro- ( μs), milli- (ms) and second (s) time units. See <xref href="../n1ql/n1ql-language-reference/datefun.dita"></xref> for details.</li>
              </ul>
              </li>
              <li>Simplified administration for large node counts (>100 node clusters).</li>
            </ul></dd>
        </dlentry>
      </dl>
</section>    
    <section><title>More Secure</title>
      
      <p>Security continues to be a strong priority for Couchbase Server development. Previous
        versions have added many <xref href="../security/security-intro.dita">security-related
          features</xref>, and version 4.5 continues to do so by adding support for X.509
        certificates and Role-Based Access Control (RBAC) for administrators. </p>    
      
<dl> 
  <dlentry>
          <dt>X509 Certificates</dt>
          <dd>With Couchbase Server 4.5, you can now integrate your signed certificate authority
            within Couchbase Server. X.509 certificates provide strongly trusted, on-the-wire
            encryption for client-server communication and across data centers. The new capability
            also makes it simple for administrators to manage and rotate certificates without
            application downtime. You can find detailed information about X.509 certificates <xref
              href="../security/security-x509.dita">here</xref>.</dd>
        </dlentry>
      </dl>
      <dl>
        <dlentry>
          <dt>Role-Based Access Control for Administrators</dt>
          <dd>With version 4.5, Couchbase Server provides Role-Based Access Control for administrators. Aside from the existing encryption and auditing facilities, RBAC provides fine grain control over administrative access and simplifies compliance with governance rules. You can control administrative roles from the Settings tab in the Web Console. See <xref href="../security/concepts-rba.dita#concept_ntl_jph_hr"></xref> for details.</dd>
        </dlentry>
      </dl>
    </section>
    
  </body>
>>>>>>> f02991819b4e4029cd336f1117de1bbc95146f44
</topic>
