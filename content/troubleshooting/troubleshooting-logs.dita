<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="topic4685">
	<title>System logs</title>
	<shortdesc>Couchbase Server creates a number of different log files depending on the components of
		the system that produce the error and the level and severity of the reported
		problem.</shortdesc>
	<body>
		<table>
			<tgroup cols="2">
				<colspec colname="col1" colwidth="1*"/>
				<colspec colname="col2" colwidth="6*"/>
				<thead>
					<row>
						<entry>Platform</entry>
						<entry>Location</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>Linux</entry>
						<entry><filepath>/opt/couchbase/var/lib/couchbase/logs</filepath></entry>
					</row>
					<row>
						<entry>Windows</entry>
						<entry><filepath>C:\Program
								Files\Couchbase\Server\var\lib\couchbase\logs</filepath> <p>Assumes
							default installation location</p></entry>
					</row>
					<row>
						<entry>Mac OS X</entry>
						<entry><filepath>/Users/couchbase/Library/Application
								Support/Couchbase/var/lib/couchbase/logs</filepath>
						</entry>
					</row>
				</tbody>
			</tgroup>
		</table>
		<p>The table below summarizes the log files for the different components in Couchbase.</p>
		<table><title>Couchbase log files for various components</title>
			<tgroup cols="2">
				<colspec colname="col1" colwidth="1*"/>
				<colspec colname="col2" colwidth="4*"/>
				<thead>
					<row>
						<entry>File</entry>
						<entry>Log Contents</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry><codeph>audit</codeph></entry>
						<entry>Security auditing for administrators.</entry>
					</row>
					<row>
						<entry><codeph>babysitter</codeph></entry>
						<entry>The <codeph>babysitter</codeph> process log captures when 
							the larger processes are spawned for cluster management, 
							cross data center replication, views, query, and N1QL.</entry>
					</row>
					<row>
						<entry><codeph>couchdb</codeph></entry>
						<entry>Errors relating to the couchdb subsystem that supports views, indexes, and related REST
							API issues.</entry>
					</row>
					<row>
						<entry><codeph>debug</codeph></entry>
						<entry>Debug level error messages related to the core server management
							subsystem, excluding information included in the
							<codeph>couchdb</codeph>, <codeph>xdcr</codeph> and
							<codeph>stats</codeph> logs.</entry>
					</row>
					<row>
						<entry><codeph>error</codeph></entry>
						<entry>Error level messages for all subsystems excluding
							cross datacenter replication.</entry>
					</row>
					<row>
						<entry><codeph>goxdcr</codeph></entry>
						<entry>Log messages related to cross datacenter replication written in Go.</entry>
					</row>
					<row>
						<entry><codeph>http_access.log</codeph></entry>
						<entry>The admin access log records server requests (including admin logins) coming through
							the REST or the Couchbase Web Console. It is an output in common log
							format and contains several important fields such as remote client IP,
							timestamp, GET/POST request and resource requested, HTTP status code,
							and so on.</entry>
					</row>
					
					<row>
						<entry><codeph>info</codeph></entry>
						<entry>Information level error messages related to the core server
							management subsystem, excluding information included in the
							<codeph>couchdb</codeph>, <codeph>xdcr</codeph> and
							<codeph>stats</codeph> logs.</entry>
					</row>
					<row>
						<entry><codeph>mapreduce_errors</codeph></entry>
						<entry>JavaScript and other view-processing errors are reported in this
							file.</entry>
					</row>
					<row>
						<entry><codeph>memcached.log</codeph></entry>
						<entry>Contains information relating to the core memcached component,
							including vBucket and replica and rebalance data streams requests.
						</entry>
					</row>
					<row>
						<entry><codeph>ns-couchdb</codeph></entry>
						<entry>Contains information related to starting up the couchdb subsystem.</entry>
					</row>
					<row>
						<entry><codeph>Projector</codeph></entry>
						<entry>Contains information for the projector process that runs on each KV node and sends
							requested index data to the index nodes.</entry>
					</row>
					<row>
						<entry><codeph>reports.log</codeph></entry>
						<entry>Contains only progress report and crash reports for the Erlang
							process. </entry>
					</row>
					
					<row>
						<entry><codeph>ssl_proxy</codeph></entry>
						<entry></entry>
					</row>
					
					
					<row>
						<entry><codeph>crash-log.bin</codeph></entry>
						<entry>Used to pass service crash reports from the babysitter to the
								<codeph>ns_server</codeph>. For example, if the
								<codeph>ns_server</codeph> is available, any crash of the
							babysitter's child is passed directly to the special crash logger
							service within the <codeph>ns_server</codeph>. If the logger service is
							not attached to the babysiter, then the babysitter saves that crash
							report to the disk and the <codeph>ns_server</codeph> can later obtain
							and log it even if the babysitter is restarted.</entry>
					</row>
					<row>
						<entry>stats</entry>
						<entry>Contains periodic reports of the core statistics.</entry>
					</row>
					<row>
						<entry><codeph>tmpfail</codeph></entry>
						<entry>For XDCR, the destination cluster is not able to eject items fast
							enough to make room for new mutations. XDCR retries several times,
							without throwing errors, but after a fixed number of attempts the errors
							are shown to the user. Nevertheless, if a user waits long enough, XDCR
							eventually retries and can replicate the remaining data.</entry>
					</row>
					<row>
						<entry><codeph>views</codeph></entry>
						<entry>Errors relating to the integration of the view system and the core
							server subsystem.</entry>
					</row>
					<row>
						<entry><codeph>xdcr</codeph></entry>
						<entry>Log messages related to starting up the cross datacenter replication subsystem.</entry>
					</row>
					<row>
						<entry><codeph>xcdr_trace</codeph></entry>
						<entry>Cross datacenter replication trace messages</entry>
					</row>
					
					
				</tbody>
			</tgroup>
		</table>
		<!--<section>
			<title>Changing log file location</title>
			<p>The default file log location is
					<filepath>/opt/couchbase/var/lib/couchbase/logs</filepath>. If you want to
				change the default log location to a different directory, change the log file
				configuration option. </p>
			<note type="note">To implement a log file location change (from the default), you must
				log in either as a <codeph>root</codeph> or <codeph>sudo</codeph> and the Couchbase
				service must be restarted.</note>
			<p>To change the log file configuration:</p>
			<ol>
				<li>Log in as root or sudo and navigate to the directory where you installed
					Couchbase. For example:
						<codeph>/opt/couchbase/etc/couchbase/static_config</codeph></li>
				<li>Edit the static_config file and change the <codeph>error_logger_mf_dir</codeph>
					variable to a different directory. For example: <codeph>{error_logger_mf_dir,
						"/home/user/cb/opt/couchbase/var/lib/couchbase/logs"}</codeph></li>
				<li>Restart the Couchbase service. After restarting the Couchbase service, all
					subsequent logs will be in the new directory.</li>
			</ol>
		</section>
		<section>
			<title>Changing logging levels</title>
			<p>The default logging level for all log files is set to <codeph>debug</codeph> except
				for <codeph>couchdb</codeph>, which is set to <codeph>info</codeph>. If you want to
				change the default logging level, modify the logging level configuration options. </p>
			<p>The configuration change can be performed in one of the following ways:</p>
			<ul>
				<li>persistent</li>
				<li>dynamic (on the fly, without restarting).</li>
			</ul>
		</section>
		<section>
			<title>Changing logging levels to be persistent</title>
			<p>Logging levels can be changed so that the changes are persistent, that is, the
				changes continue to be implemented should a Couchbase Server reboot occur.</p>
			<note type="note">To implement logging level changes, restart the Couchbase
				service.</note>
			<p>To change logging levels to be persistent:</p>
			<ol>
				<li>Log in as <codeph>root</codeph> or <codeph>sudo</codeph> and navigate to the
					directory where you installed Couchbase. For example:
						<filepath>/opt/couchbase/etc/couchbase/static_config</filepath></li>
				<li>Edit the <b>static_config</b> file and change the desired log component. For
					example, parameters with the <codeph>loglevel_</codeph> prefix set the logging
					level.</li>
				<li>Restart the Couchbase service.</li>
			</ol>
			<p>After restarting the Couchbase service, logging levels for that component will be
				changed.</p>
		</section>
		<section>
			<title>Changing logging levels dynamically</title>
			<p>If logging levels are changed dynamically and if a Couchbase server reboot occurs,
				then the changed logging levels revert to the default. </p>
			<p>To change logging levels dynamically, execute a curl <cmdname>POST</cmdname> command
				using the following syntax:</p>
			<codeblock>
curl -X POST -u adminName:adminPassword
  HOST:PORT/diag/eval 
  –d ‘ale:set_loglevel(&lt;log_component&gt;,&lt;logging_level&gt;).’
</codeblock>
			<p>Where:</p>
			<dl>
				<dlentry>
					<dt>Log_component</dt>
					<dd>The default log level (except <codeph>couchdb</codeph>) is
							<codeph>debug</codeph>; for example <codeph>ns_server</codeph>. The
						available loggers are <codeph>ns_server</codeph>, <codeph>couchdb</codeph>,
							<codeph>user</codeph>, <codeph>Menelaus</codeph>,
							<codeph>ns_doctor</codeph>, <codeph>stats</codeph>,
							<codeph>rebalance</codeph>, <codeph>cluster</codeph>, views,
							<codeph>mapreduce_errors</codeph> , xdcr and
							<codeph>error_logger.</codeph></dd>
				</dlentry>
				<dlentry>
					<dt>Logging_level</dt>
					<dd>The available log levels are <codeph>debug</codeph>, <codeph>info</codeph>,
							<codeph>warning</codeph>, and <codeph>error</codeph>.
						<codeblock>
curl -X POST -u Administrator:password 
	http://127.0.0.1:8091/diag/eval 
	-d 'ale:set_loglevel(ns_server,error).
</codeblock></dd>
				</dlentry>
			</dl>
		</section>
		<section>
			<title>Custom rotation setting</title>
			<p>To provide custom rotation settings for each component, write the following in the
				file <filepath> /opt/couchbase/etc/couchbase/static_config</filepath>:</p>
			<codeblock>{disk_sink_opts_disk_debug, 
[{rotation, [{size, 10485760}, 
{num_files, 10}]}]}</codeblock>
			<p>This will rotate the <codeph>debug.log</codeph> at 10M and keep 10 copies of the log
				(the current log and 9 compressed logs).</p>
		</section>-->
	</body>
</topic>
