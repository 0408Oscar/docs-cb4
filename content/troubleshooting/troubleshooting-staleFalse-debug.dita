<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="topic9362">
   <title>Debugging stale=false queries</title>
   <shortdesc>Debugging <codeph>stale=false</codeph> queries for missing and unexpected
      data</shortdesc>
   <body>
      <p>The query parameter <codeph>debug=true</codeph> can be used to debug queries with
            <codeph>stale=false</codeph> that are not returning all expected data or returning
         unexpected data. This is particularly useful when clients issue a
            <codeph>stale=false</codeph> query right after being unblocked by a memcached
            <cmdname>OBSERVE</cmdname> command. .</p>
      <p>Here follows an example of how to debug these issues in a simple scenario with only 16
         vBuckets (instead of 1024) and 2 nodes. The tools <codeph>couchdb_dump</codeph> and
            <codeph>couchdb_info</codeph> (from the couchstore GIT project) are used to help analyze
         this type of issues and are available under <filepath>install/bin</filepath> directory.</p>
      <p>Querying a view with <codeph>debug=true</codeph> will add an extra field, named
            <codeph>debug_info</codeph> in the view response. This field has one entry per node in
         the cluster if no errors occurred, such as in down/timed out nodes. </p>
         <p>Example:</p>
      <codeblock><codeph>&gt; curl -s 'http://localhost:9500/default/_design/test/_view/view1?stale=false&amp;limit=5&amp;debug=true' | json_xs
 {
    "debug_info" : {
       "local" : {
          "main_group" : {
             "passive_partitions" : [],
             "wanted_partitions" : [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7
             ],
             "wanted_seqs" : {
                "0002" :00,
                "0001" :00,
                "0006" :00,
                "0005" :00,
                "0004" :00,
                "0000" :00,
                "0007" :00,
                "0003" :00
             },
             "indexable_seqs" : {
                "0002" :00,
                "0001" :00,
                "0006" :00,
                "0005" :00,
                "0004" :00,
                "0000" :00,
                "0007" :00,
                "0003" :00
             },
             "cleanup_partitions" : [],
             "stats" : {
                "update_history" : [
                   {
                      "deleted_ids" : 0,
                      "inserted_kvs" :00,
                      "inserted_ids" :00,
                      "deleted_kvs" : 0,
                      "cleanup_kv_count" : 0,
                      "blocked_time" : 0.000258,
                      "indexing_time" : 103.222201
                   }
                ],
                "updater_cleanups" : 0,
                "compaction_history" : [],
                "full_updates" : 1,
                "accesses" : 1,
                "cleanups" : 0,
                "compactions" : 0,
                "partial_updates" : 0,
                "stopped_updates" : 0,
                "cleanup_history" : [],
                "update_errors" : 0,
                "cleanup_stops" : 0
             },
             "active_partitions" : [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7
             ],
             "pending_transition" : null,
             "unindexeable_seqs" : {},
             "replica_partitions" : [
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
             ],
             "original_active_partitions" : [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7
             ],
             "original_passive_partitions" : [],
             "replicas_on_transfer" : []
          }
       },
       "http://10.17.30.98:9501/_view_merge/" :   {
          "main_group" : {
             "passive_partitions" : [],
             "wanted_partitions" : [
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
             ],
             "wanted_seqs" : {
                "0008" :00,
                "0009" :00,
                "0011" :00,
                "0012" :00,
                "0015" :00,
                "0013" :00,
                "0014" :00,
                "0010" :00
             },
             "indexable_seqs" : {
                "0008" :00,
                "0009" :00,
                "0011" :00,
                "0012" :00,
                "0015" :00,
                "0013" :00,
                "0014" :00,
                "0010" :00
             },
             "cleanup_partitions" : [],
             "stats" : {
                "update_history" : [
                   {
                      "deleted_ids" : 0,
                      "inserted_kvs" :00,
                      "inserted_ids" :00,
                      "deleted_kvs" : 0,
                      "cleanup_kv_count" : 0,
                      "blocked_time" : 0.000356,
                      "indexing_time" : 103.651148
                   }
                ],
                "updater_cleanups" : 0,
                "compaction_history" : [],
                "full_updates" : 1,
                "accesses" : 1,
                "cleanups" : 0,
                "compactions" : 0,
                "partial_updates" : 0,
                "stopped_updates" : 0,
                "cleanup_history" : [],
                "update_errors" : 0,
                "cleanup_stops" : 0
             },
             "active_partitions" : [
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
             ],
             "pending_transition" : null,
             "unindexeable_seqs" : {},
             "replica_partitions" : [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7
             ],
             "original_active_partitions" : [
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
             ],
             "original_passive_partitions" : [],
             "replicas_on_transfer" : []
          }
       }
    },
    "total_rows" : 1000000,
    "rows" : [
       {
          "value" : {
             "ratio" : 1.8,
             "type" : "warrior",
             "category" : "orc"
          },
          "id" : "0000014",
          "node" : "http://10.17.30.98:9501/_view_merge/",
          "partition" : 14,
          "key" : 1
       },
       {
          "value" : {
             "ratio" : 1.8,
             "type" : "warrior",
             "category" : "orc"
          },
          "id" : "0000017",
          "node" : "local",
          "partition" : 1,
          "key" : 1
       },
       {
          "value" : {
             "ratio" : 1.8,
             "type" : "priest",
             "category" : "human"
          },
          "id" : "0000053",
          "node" : "local",
          "partition" : 5,
          "key" : 1
       },
       {
          "value" : {
             "ratio" : 1.8,
             "type" : "priest",
             "category" : "orc"
          },
          "id" : "0000095",
          "node" : "http://10.17.30.98:9501/_view_merge/",
          "partition" : 15,
          "key" : 1
       },
       {
          "value" : {
             "ratio" : 1.8,
             "type" : "warrior",
             "category" : "elf"
          },
          "id" : "0000151",
          "node" : "local",
          "partition" : 7,
          "key" : 1
       }
    ]
 }
</codeph></codeblock>
      <p>For each node, there are 2 particular fields of interest when debugging
            <codeph>stale=false</codeph> queries that apparently miss some data:</p>
      <ul>
         <li><p><codeph>wanted_seqs</codeph> - This field has an object (dictionary) value where
            keys are vBucket IDs and values are vBucket database sequence numbers for an
               explanation of sequence numbers). This field tells us the sequence number of each
               vBucket database file (at the corresponding node) at the moment the query arrived at
               the server (all these vBuckets are <codeph>active vBuckets</codeph> ).</p></li>
         <li><p><codeph>indexable_seqs</codeph> - This field has an object (dictionary) value where
            keys are vBucket IDs and values are vBucket database sequence numbers. This field
            tells us, for each active vBucket database, up to which sequence the index has
            processed/indexed documents (remember, each vBucket database sequence number is
               associated with 1, and only 1, document).</p></li>
      </ul>
      <p>For queries with <codeph>stale=false</codeph>, all the sequences in
            <codeph>indexable_seqs</codeph> must be greater or equal then the sequences in
            <codeph>wanted_seqs</codeph> - otherwise the <codeph>stale=false</codeph> option can be
         considered broken. </p>
      <p>When the query request arrives, at each node the value for <codeph>wanted_seqs</codeph> is
         computed by asking each active vBucket database for its current sequence number. If any
         sequence is greater than the corresponding entry in <codeph>indexable_seqs</codeph> stored
         in the index, the following happens:</p>
      <ol>
         <li>The client is blocked</li>
         <li>The indexer is started to update the index</li>
         <li>The client is unblocked when the indexer finishes updating the index</li>
         <li>Finally, the server starts streaming rows to the client</li>
        
      </ol>
     
      <p>Note that, at this point, all sequences in <codeph>indexable_seqs</codeph> are necessarily
         greater or equal then the corresponding sequences in <codeph>wanted_sequences</codeph>,
         otherwise the <codeph>stale=false</codeph> implementation is broken.</p>
   </body>
   <related-links>
      <linklist>
         <link href="http://www.couchbase.com/issues/browse/MB-7161" scope="external" format="html">
            <linktext>MB–7161</linktext>
         </link>
      </linklist>
   </related-links>
</topic>
