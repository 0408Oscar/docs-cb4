<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_db3_ztq_pq">
  <title>XDCR filtering</title><shortdesc>Filtering in XDCR is used to make data available locally with low latency.</shortdesc>
  <body>
    <p>When WAN bandwidth is limited, filtering of keys that are transmitted over the XDCR stream increases efficiency and reduces latency.
     </p>
    <p>Couchbase Server performs filtering on keys and not on values, which would require additional
      data and achieve lower performance. Filtering is useful in several scenarios, such as:</p>
    <dl>
      <dlentry>
        <dt>Delivering data relevant to geography</dt>
        <dd>Full bucket data contains data from many geographies, and all writes occur in the
          central Couchbase cluster, which contains data for all users and full consistency.</dd> 
          <dd>For read-only requests, it is inefficient to cross geographic locations and is more
          economical to use XDCR filtering and filter data relevant to the location. </dd>
        <dd>This way, data relevant to Europe can be replicated in an EU cluster and data relevant
          to Asia to an Asian cluster. Data is replicated using XDCR filtering on keys, where keys
          have a geo identifier for the users. </dd>
      </dlentry>
    </dl>
    <dl>
      <dlentry>
        <dt>Maintaining reference data for many deployments</dt>
        <dd>XDCR filtering can be used to maintain a single master copy that administrators can
          update to propagate the updates to all deployments.</dd>
        <dd>Using XDCR filtering, they don't have to repeat the same data such as patient's medical
          procedure code distributed with each deployment. </dd>
      </dlentry>
    </dl>
    <dl>
      <dlentry>
        <dt>Tenant replication</dt>
        <dd>The best density of tenants within a multi-tenant deployment can be achieved by dividing
          up the key space with a <codeph>tenantID</codeph> at the beginning of each key in a single bucket. </dd>
           
         <dd>XDCR filtering can be used to move tenants between clusters, to give tenants a copy of
          their data, or simply to create a redundant copy of a single-tenant data. </dd>
      </dlentry>
    </dl>
    
    <dl>
      <dlentry>
        <dt>Application based replication </dt>
        <dd>Applications can use compound keys for documents that involve combining multiple application attributes to form a document key. 
          XDCR filtering can be used to move documents between clusters, based on specific application attributes.
        </dd>
        <dd>For example, if you are using a healthcare application with Couchbase Server, the keys
          in the documents can be defined based on the patient's name, age, and location of the
          healthcare facility. If you define the filter and specify the location while leaving the
          other attributes out, only the patients records for that specified location will be
          transferred. </dd>
      </dlentry>
    </dl>
    
    <section><title>What you should watch out for </title>
      <p>It is important to avoid conditions where two replication filters to the same destination
        match partially or fully. If an overlap occurs, it will waste machine resources since a
        single key gets replicated multiple times over the different replication connections.
        Overlapping filtering expressions does not guarantee which of the two replications will
        reach the destination cluster faster.</p>  </section>
    <section><title>Rules for defining regular expressions</title>The syntax of the regular
      expressions that applies to rules for XDCR filtering is the general syntax used by Perl,
      Python, and other languages. <p>Except for \C, it is the syntax accepted by RE2 and described
        in <xref href="http://code.google.com/p/re2/wiki/Syntax" format="html" scope="external"
          >http://code.google.com/p/re2/wiki/Syntax</xref>. </p>
    </section>
    
      
  
  </body>
</topic>
