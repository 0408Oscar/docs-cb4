<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_obm_wq1_1t">
 <title>View operation</title>
 <shortdesc>MapReduce views are scoped within a design document, with each design document attached to a single bucket. View indexes are eventually consistent compared to the underlying bucket documents in the Data service. View updates can happen automatically.</shortdesc>
 <conbody>
  <p>All views within Couchbase Server operate as follows: <ul>
   <li><b>Views are scoped within a design document, with each design document attached to a single bucket.</b> A view can only access the information within the corresponding bucket and cannot access or aggregate data from multiple buckets. 
    <p>Views are created within design documents and each design document exists within the corresponding named bucket.<ul>
     <li>Each design document can have 0-n views.</li>
     <li>Each bucket can contain 0-n design documents.</li>
    </ul>
    </p></li>
   <li><b>View indexes are eventually consistent compared to the underlying bucket documents in the Data Service.</b> This means that there might be a delay between the time a document is modified and the time it is indexed. for more information, see .</li>
   <li><b>View updates can happen automatically.</b> The view engine uses Database Change Protocol (DCP) to track document mutations in memory and uses these mutations to incrementally build the view on disk. Every 5 seconds the view engine checks whether 5000 mutations have occurred or not. If at least 5000 mutations have occurred, an index update operation is started per design document and all views within that design document are updated. The indexer takes all mutations since it was last run and applies them to the index files. 
    <p>The default number of mutations to check for is 5000, but this setting is tunable using the <parmname>updateMinChanges</parmname> option. The update interval can also be configured by setting the <parmname>updateInterval</parmname> option.</p>
</li>
  </ul>
  </p>
  <p>The updates are applied as follows: <ul>
   <li>For all active, production views, indexes are automatically updated according to the update interval <parmname>updateInterval</parmname> and the number of document changes <parmname>updateMinChanges</parmname>. If <parmname>updateMinChanges</parmname> is set to 0 (zero), then automatic updates are disabled for main indexes.</li>
   <li>If replica indexes have been configured for a bucket, the index is automatically updated according to the document changes settings (replicaUpdateMinChanges; default 5000). 
    <p>If replicaUpdateMinChanges is set to 0 (zero), then automatic updates are disabled for replica indexes.</p>
    <p>The trigger level can be configured both globally and for individual design documents for all indexes using the REST API.</p>
    <p>To obtain the current view update daemon settings, access a node within the cluster on the administration port using the following URL: <userinput>http://<varname>nodename</varname>:8091/settings/viewUpdateDaemon :
     GET http://Administrator:<varname>Password</varname>@<varname>nodename</varname>:8091/settings/viewUpdateDaemon</userinput></p>
  <p>The request returns a JSON document with the current update settings: <codeblock>
   {
   "updateInterval":5000,
   "updateMinChanges":5000,
   "replicaUpdateMinChanges":5000
   }
  </codeblock></p> 
    <p>To update the settings, use POST with a data payload that includes the updated values. For example, to update the time interval to 10 seconds and document changes to 7000 each: <userinput>POST http://<varname>nodename</varname>:8091/settings/viewUpdateDaemon
     updateInterval=10000&amp;updateMinChanges=7000</userinput></p>
    <p>If successful, the returned value is the JSON of the updated configuration. To configure the <parmname>updateMinChanges</parmname> or <parmname>replicaUpdateMinChanges</parmname> values explicitly on individual design documents, specify the parameters within the options section of the design document. For example:
     <codeblock>
      {
      "_id": "_design/myddoc",
      "views": {
      "view1": {
      "map": "function(doc, meta) { if (doc.value) { emit(doc.value, meta.id);} }"
      }
      },
      "options": {
      "updateMinChanges": 1000,
      "replicaUpdateMinChanges": 20000
      }
      }
     </codeblock>
    </p>
    <p>You can set this information when creating and updating design documents through the design document REST API. To perform this operation using the curl tool: <userinput>curl -X POST -v -d 'updateInterval=7000&amp;updateMinChanges=7000' \  'http://Administrator:Password@192.168.0.72:8091/settings/viewUpdateDaemon'</userinput></p>
   </li>
  </ul></p> 
 </conbody>
</concept>
