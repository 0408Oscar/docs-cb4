<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_ssb_qhb_ys">
 <title>Indexing in Couchbase</title>
 <shortdesc>An index is a data-structure that provides quick and efficient means to access data, that would otherwise require scanning a lot more documents. Couchbase Server provides three types of indexers which you can use to build indexes. You must keep in mind the guidelines/restrictions described in the folowing sections when selecting indexes in your application. </shortdesc>
 <conbody>
  <p>There are three types of indexers in Couchbase Server: 
   <dl>
   <dlentry>
    <dt>Map-Reduce Views </dt>
    <dd>Map-reduce views (also called <i>views</i>) are Javascript functions defined on documents in a Couchbase bucket.  Views are built incrementally, re-indexing only the documents that have changed since the last index update. Couchbase Server precomputes and stores view results before returning the results to the client.</dd>
   </dlentry>
    <dlentry>
     <dt>Spatial Views</dt>
     <dd>Couchbase Server users spatial views to query geospatial information. A spatial view contains geometric data that can be queried to return information based on whether the recorded geometries exist within a given multi-dimensional range.
      <p>The major difference between Map-Reduce views and spatial views is that instead of two functions, one each for map and reduce, spatial views contain a single function called <i>spatial function</i>. The spatial function is similar to the map function in map-reduce views.</p></dd>
    </dlentry>
    <dlentry>
     <dt>Global Secondary Index</dt>
     <dd>Global Secondary Index (GSI) enables applications to perform fast query lookups and data scans at a high throughput.  Unlike view indexes that indexes only the subset of the data within each data node, the global secondary indexes are global across the cluster and reside on the index nodes.</dd>
    </dlentry>
  </dl>
</p>
  <p>Applications can query the Couchbase server in one of the following ways: <ul>
   <li>Using key-value access</li>
   <li>Using the Couchbase View API. Applications can choose to use either map-reduce view indexes or spatial views. </li>
   <li>Using N1QL. Applications can choose to use map-reduce views or global secondary indexes. </li>
  </ul></p>
 </conbody>
</concept>
