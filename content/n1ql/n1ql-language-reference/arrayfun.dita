<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="topic_8_2" xtrc="/w:document/w:body[1]/w:p[1257]" xml:lang="en-US">
  <title id="title__Toc272567283">Array functions</title>
  
 <conbody>
   <p>You can use array functions to evaluate arrays, perform computations on elements in an array, and to return a new array 
     based on a transformation.</p>
   
   <p>ARRAY_APPEND(expression, value)</p>
   <p>Returns new array with value appended.</p>
   
   <p>ARRAY_AVG(expression)</p>
   <p>Returns arithmetic mean (average) of all the non-NULL number values in the array, or NULL if there are no such values.</p>
   
   <p>ARRAY_CONCAT(expression1, expression2)</p>
   <p >Returns new array with the concatenation of the input arrays.</p>
   
   <p>ARRAY_CONTAINS(expression, value)</p>
   <p>Returns true if the array contains value.</p>
   
   <p>ARRAY_COUNT(expression)</p>
   <p>Returns count of all the non-NULL values in the array, or zero if there are no such values.</p>
   
   <p>ARRAY_DISTINCT(expression)</p>
   <p>Returns new array with distinct elements of input array.</p>
   
   <p>ARRAY_IFNULL(expression)</p>
   <p>Returns the first non-NULL value in the array, or NULL.</p>
   
   <p>ARRAY_LENGTH(expression)</p>
   <p>Returns the number of elements in the array.</p>
   
   <p>ARRAY_MAX(expression)</p>
   <p>Returns the largest non-NULL, non-MISSING array element, in N1QL collation order.</p>
   
   <p>ARRAY_MIN(expression)</p>
   <p>Returns smallest non-NULL, non-MISSING array element, in N1QL collation order.</p>
   
   <p>ARRAY_POSITION(expression, value)</p>
   <p>Returns the first position of value within the array, or -1. Array position is zero-based,
      i.e. the first position is 0.</p>
   
   <p>ARRAY_PREPEND(value, expression)</p>
   <p>Returns new array with value pre-pended.</p>
   
   <p>ARRAY_PUT(expression, value)</p>
   <p>Returns new array with value appended, if value is not already present, otherwise returns the unmodified input array.</p>
   
   <p>ARRAY_RANGE(start, end [, step ])</p>
   <p>Returns new array of numbers, from start until the largest number less than end. Successive numbers are incremented by step. 
     If step is omitted, the default is 1. If step is negative, decrements until the smallest number greater than end.</p>
   
   <p>ARRAY_REMOVE(expression, value)</p>
   <p>Returns new array with all occurrences of value removed.</p>
   
   <p>ARRAY_REPEAT(value, n)</p>
   <p>Returns new array with value repeated n times.</p>
   
   <p>ARRAY_REPLACE(expression, value1, value2 [, n ])</p>
   <p>Returns new array with all occurrences of value1 replaced with value2. If n is given, at most n replacements are performed.</p>
   
   <p>ARRAY_REVERSE(expression)</p>
   <p>Returns new array with all elements in reverse order.</p>
   
   <p>ARRAY_SORT(expression)</p>
   <p>Returns new array with elements sorted in N1QL collation order.</p>
   
   <p>ARRAY_SUM(expression)</p>
   <p>Sum of all the non-NULL number values in the array, or zero if there are no such values.</p>
 </conbody>
</concept>