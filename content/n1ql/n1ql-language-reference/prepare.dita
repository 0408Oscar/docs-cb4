<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="topic_11_4_2" xml:lang="en-US">
  <title>PREPARE statement [Beta]</title>
  <conbody >
    <section> <title>PREPARE statement</title>
      <p><b>[This is a beta feature; it's not for use in production.] </b></p>
      <p><i>prepare:</i></p>
      <codeblock> PREPARE [ name ( FROM | AS ) ] statement </codeblock>
      <p>The PREPARE statement prepares a query. A name can optionally be specified. A JSON array is returned that contains one result that has the properties: <ul>
        <li>name: If present, this will be the name given to the PREPARE statement. If not, a name is generated. </li>
        <li>operator: the execution plan of the statement being prepared.</li>
        <li>signature: the signature of the statement being prepared. </li>
        <li>text: the full PREPARE statement text.</li>
        <li>encoded_plan: an encoding of the full prepared statement.</li>
      </ul></p>
      <p>Repeatedly preparing a statement with the same name will result in the statement being
        overwritten. A prepare statement that uses a name that was used for a different statement
        will result in a duplicate name error. </p>
    </section>
    
    <section><title>EXECUTE statement</title>
      <p><b>[This is a beta feature; it's not for use in production.] </b></p>
      
      <p>The EXECUTE statement executes a prepared statement. When provided, name should identify a
        prepared statement. An error is returned if the name does not identify a prepared statement.
        When provided, plan should be the result of a prepared statement. An error is returned if the
        plan cannot be converted to a prepared statement.</p>
    </section>
    
    <section><title>Examples</title>
      <p>The following example shows how to prepare the statement without specifying a name.</p>
      <codeblock spectitle="Request:">
        $ curl -v http://localhost:8093/query/service \
        -d 'statement=PREPARE SELECT text FROM tweets WHERE rating > $r AND created_at > $date'
      </codeblock>
      <codeblock spectitle="Response">
        &lt; HTTP/1.1 200 OK
        {
        "requestID": "a339a496-7ed5-4625-9c64-0d7bf584a1bd",
        "signature": "json",
        "results": [
        {  "encoded_plan": "H4sIAAAJbogA/5yRQU/6QBDFvwpZ/gdIIAAA==",
        "name": "a1355198-2576-4e3d-af04-5acc77d8a681",
        "operator": {
        "#operator": "Sequence",
        "~children": [
        // Content redacted
        ]
        },
        "signature": {
        "text": "json"
        },
        "text": "PREPARE SELECT text FROM tweets WHERE rating > $r AND created_at > $date"
        }
        ],
        "status": "success",
        "metrics": {
        "elapsedTime": "1.970679ms",
        "executionTime": "1.889351ms",
        "resultCount": 1,
        "resultSize": 2261
        }
        }
      </codeblock>
      <p>The following example uses the server-generated name of the prepared statement to
        execute the statement.</p>
      <codeblock spectitle="Request:">
        curl -v http://localhost:8093/query/service -d 'prepared="a1355198-2576-4e3d-af04-5acc77d8a681"&amp;$r=9.5&amp;$date="1-1-2014"'</codeblock>
      <codeblock spectitle="Response:">          &lt; HTTP/1.1 200 OK
        {
        "requestID": "1bd9956b-bc8e-478a-bd84-3955fe2db047",
        "signature": {
        "text": "json"
        },
        "results": [
        {
        "text": "Couchbase is my favorite database"
        }
        ],
        "status": "success",
        "metrics": {
        "elapsedTime": "1.527795ms",
        "executionTime": "1.443748ms",
        "resultCount": 0,
        "resultSize": 0
        }
        }
        $  
      </codeblock>
      <b>Specifying the name of the prepared statement</b>
      <p>The following example specifies a name for the prepared statement.</p> 
      <codeblock spectitle="Request:">
        $ curl -v http://localhost:8093/query/service \
        -d 'statement=PREPARE fave_tweets FROM SELECT text FROM tweets WHERE rating >= $r'
      </codeblock>
      <codeblock spectitle="Response:">
        &lt; HTTP/1.1 200 OK
        {
        "requestID": "a339a496-7ed5-4625-9c64-0d7bf584a1bd",
        "signature": "json",
        "results": [
        {   "encoded_plan": "H4sIAAAJbogA/5yRQU/6QBDFvwpZ/gdIIAAA==",
        "name": "fave_tweets",
        "operator": {
        // and so on
        ...
      </codeblock>
      The following example uses the name specified in the example above to run the prepared statement.
      <codeblock spectitle="Request:">
        $ curl -v http://localhost:8093/query/service -d 'prepared="fave_tweets"&amp;$r=9.5'
      </codeblock>
      <codeblock spectitle="Response">
        &lt; HTTP/1.1 200 OK
        {
        "requestID": "1bd9956b-bc8e-478a-bd84-3955fe2db047",
        "signature": {
        "text": "json"
        },
        "results": [
        {
        "text": "Couchbase is my favorite database"
        }
        ],
        "status": "success",
        "metrics": {
        "elapsedTime": "1.527795ms",
        "executionTime": "1.443748ms",
        "resultCount": 0,
        "resultSize": 0
        }
        }
        $
      </codeblock>
    </section>
    
    
  </conbody>
</concept>
