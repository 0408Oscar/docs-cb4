<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="topic_8_11"  xml:lang="en-US">
  <title id="title__Toc272567381">Pattern-matching Functions</title>
 
<conbody>
    <p>Pattern-matching functions allow you to work determine if strings contain a regular
      expression pattern. You can also find the first position of a regular expression pattern and
      replace a regular expression with another.</p>
    <p>For more information on all supported REGEX patterns, see <xref
        href="https://golang.org/pkg/regexp/syntax/" format="html" scope="external"
        >https://golang.org/pkg/regexp/syntax/</xref><note>Couchbase Server 4.x N1QL supports
        regular expressions supported by The Go Programming Language version 1.4.2.</note></p>
    <p>REGEXP_CONTAINS(expression, pattern)</p>
  <p>Returns True if the string value contains the regular expression pattern.</p><p>Example:</p>
  <p>
    <codeblock>SELECT name 
FROM `travel-sample` 
WHERE type = "landmark" AND REGEX_CONTAINS(name, ".*In+") 
LIMIT  2;</codeblock>
  </p>
  <p>Results:</p>
  <p>
    <codeblock>[
  {
    "name": "Beijing Inn"
  },
  {
    "name": "Sportsman Inn"
  }
]</codeblock>
  </p>
    
    <p>REGEXP_LIKE(expression, pattern)</p>
  <p>Returns True if the string value matches the regular expression pattern.</p>
    <p>Example:</p><p>
    <codeblock>SELECT name
FROM `travel-sample` 
WHERE type = "hotel" and REGEX_LIKE(name, "In+.*") 
LIMIT 4;</codeblock>
  </p>
  <p>Results:</p>
  <p>
    <codeblock>[
  {
    "name": "Inveraray Youth Hostel"
  },
  {
    "name": "Inverness Youth Hostel"
  },
  {
    "name": "Indian Cove Campground"
  },
  {
    "name": "Inn at Marina del Rey"
  }
]</codeblock>
  </p>
    <p>REGEXP_POSITION(expression, pattern)</p>
  <p>Returns first position of the regular expression pattern within the string, or -1.</p>
    <p>Example:</p><p>
    <codeblock>SELECT name, REGEX_POSITION(name, "[h*]")
FROM `travel-sample` 
WHERE type = "hotel" 
LIMIT 5;</codeblock>
  </p>
  <p>Results:</p>
  <p>
    <codeblock>[
  {
    "$1": 11,
    "name": "Medway Youth Hostel"
  },
  {
    "$1": 1,
    "name": "The Balmoral Guesthouse"
  },
  {
    "$1": 1,
    "name": "The Robins"
  },
  {
    "$1": -1,
    "name": "Le Clos Fleuri"
  },
  {
    "$1": -1,
    "name": "Glasgow Grand Central"
  }
]</codeblock>
  </p>
    <p>REGEXP_REPLACE(expression, pattern, repl [, n ])</p>
    <p>Returns new string with occurrences of pattern replaced with <i>repl</i>. If n is given, at
      most n replacements are performed.</p>
    <p>Example:</p><p>
        <codeblock>SELECT REGEX_REPLACE(name, "[In+.*]", "Inn", 1)   
FROM `travel-sample` 
LIMIT 4;</codeblock>
      </p>
  <p>Results:</p>
  <p>
    <codeblock>[
  {
    "$1": "40-Mile Air"
  },
  {
    "$1": "Texas WiInngs"
  },
  {
    "$1": "Atifly"
  },
  {
    "$1": "Jc royalInnbritannica"
  }
]
</codeblock>
  </p>
  </conbody>

</concept>