<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="topic_8_10" xtrc="/w:document/w:body[1]/w:p[1651]" xml:lang="en-US">
  <title>Object functions</title>
  <conbody >
    <section><title>OBJECT_LENGTH(expression)</title>
      <p>This function returns the number of name-value pairs in the object. You can specify an
        object or an expression that evaluates to an object.</p><codeblock spectitle="Example">go_cbq> SELECT object_length(`travel-sample`.schedule[0]) 
FROM `travel-sample` 
WHERE type = "route"  
LIMIT 1;

"results" : [
    {
        "$1": 3
    }
]</codeblock>
   </section>
    <section><title>OBJECT_NAMES(expression)</title>
      <p>This function returns an array containing the attribute names of the object, in N1QL
        collation order.</p>
      <codeblock spectitle="Example">go_cbq> SELECT object_names(`travel-sample`.schedule[0]) 
FROM `travel-sample` 
WHERE type = "route" 
LIMIT 1;

"results" : [
    {
        "$1": [
            "day",
            "flight",
            "utc"
        ]
    }
]</codeblock>
    </section>
    <section><title>OBJECT_PAIRS(expression)</title>
      <p>This function returns an array containing the attribute name and value pairs of the object,
        in N1QL collation order of the names.</p>
      <codeblock spectitle="Example">go_cbq> SELECT object_pairs(`travel-sample`.schedule[0]) 
FROM `travel-sample` 
WHERE type = "route" 
LIMIT 1;
    
"results" : [
    {
        "$1": [
            {
                "name": "day",
                "value": 0
            },
            {
                "name": "flight",
                "value": "AF552"
            },
            {
                "name": "utc",
                "value": "14:41:00"
            }
        ]
    }
]   </codeblock>
    </section>
    <section><title>OBJECT_VALUES(expression)</title>
      <p>This function returns an array containing the attribute values of the object, in N1QL
        collation order of the corresponding names.</p>
      <codeblock spectitle="Example">go_cbq> SELECT object_values(`travel-sample`.schedule[0]) FROM `travel-sample` WHERE type = "route" LIMIT 1;

"results" : [
    {
        "$1": [
            0,
            "AF552",
            "14:41:00"
        ]
    }
]</codeblock>
    </section> 
    <section><title>OBJECT_ADD()</title><p>This function adds new attributes and values to a given
        object and returns the updated
      object.</p><codeblock>object_add(<varname>object</varname>, <varname>new_attr_key</varname>, <varname>new_attr_value</varname>)</codeblock>
      Note that: <ul id="ul_tb5_z1b_1v">
        <li>This function does not perform key substitution.</li>
        <li>If you add a duplicate attribute (that is, if the key is found), it returns an error or
          NULL object.</li>
        <li>If <varname>new_attr_key</varname> or <varname>new_attr_value</varname> is MISSING, or
          if <varname>new_attr_key</varname> is NULL, it returns the <varname>object</varname>
          unmodified.</li>
        <li>If <varname>object</varname> is not an object or NULL, it returns a NULL value
          object.</li>
      </ul><codeblock spectitle="Example">go_cbq> SELECT object_add(schedule[0], "day_new", 1) 
            FROM `travel-sample` 
            WHERE type = "route"  
            LIMIT 1;

            "results" : [
                {
                    "$1": {
                        "day": 0,
                        "day_new": 1,
                        "flight": "AF552",
                        "utc": "14:41:00"
                    }
                }
            ]       </codeblock></section>
    <section> <title>OBJECT_PUT()</title>
      <p>This function adds new or updates existing attributes and values to a given object, and
        returns the updated object.
        <codeblock>object_put(<varname>object</varname>, <varname>attr_key</varname>, <varname>attr_value</varname>)</codeblock>
        Note that: <ul id="ul_kck_2db_1v">
          <li>If <varname>attr_key</varname> is found in the object, it replaces the corresponding
            attribute value by <varname>attr_value</varname>.</li>
          <li>If <varname>attr_value</varname> is MISSING, it deletes the corresponding existing key
            (if any), like<cmdname> object_remove()</cmdname>.</li>
          <li>If <varname>attr_key</varname> is MISSING, it returns a MISSING value.</li>
          <li>If <varname>attr_key</varname> is not an object, it returns a NULL value.</li>
        </ul><codeblock spectitle="Example">go_cbq> SELECT object_put(schedule[0], "day", 1)  
          FROM `travel-sample` 
          WHERE type = "route"  
          LIMIT 1;

          "results" : [
              {
                  "$1": {
                      "day": 1,
                      "flight": "AF552",
                      "utc": "14:41:00"
                  }    
              }
          ]</codeblock></p>
    </section>
    
    <section><title>OBJECT_REMOVE()</title>
      <p>This function removes the specified attribute and corresponding values from the given
        object.
        <codeblock>object_remove(<varname>object</varname>, <varname>attr_key</varname>)</codeblock>
        Note that: <ul>
          <li>If the <varname>attr_key</varname> is MISSING, it returns a MISSING value.</li>
          <li>If the <varname>attr_key</varname> is not an object, it returns a NULL value.</li>
        </ul><codeblock spectitle="Example">go_cbq> SELECT object_remove(schedule[0], "day")  
              FROM `travel-sample` 
              WHERE type = "route"  
              LIMIT 1;

              "results" : [
                  {
                      "$1": {
                          "flight": "AF552",
                          "utc": "14:41:00"
                      }
                  }
              ]         </codeblock></p>
    </section>      
  </conbody>


</concept>
