<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="topic_2_4" xml:lang="en-US">
	<title id="title__Toc272567200">Getting system information</title>
	<shortdesc>N1QL has a system catalog that stores metadata about a database.</shortdesc>
	<conbody>
		<p> The system catalog is a
			namespace. The namespace is called <codeph>system.</codeph></p>
		<p>There is a keyspace for each type of artifact. The keyspace names are plural in order to
			avoid conflicting with N1QL keywords.</p>

		<section>
			<title>Logical hierarchy</title>
			<p>N1QL has the following artifacts:</p>

			<dl>

				<dlentry>
					<dt>Datastores</dt>
					<dd>Datastores are analogous to sites. A datastore is a database deployment, e.g. a
						server cluster, cloud service, or mobile installation. Analogous to a RDBMS
						instance.</dd>
				</dlentry>

				<dlentry>
					<dt>Namespaces</dt>
					<dd>Namespaces are analogous to pools. A namespace is a unit of authorization,
						resource allocation, and tenancy. It is analogous to a RDBMS database or
						schema</dd>
				</dlentry>

				<dlentry>
					<dt>Keyspaces</dt>
					<dd>Keyspaces are analogous to buckets. A keyspace is a set of documents that are
						allowed to vary in structure. It is a unit of authorization and resource
						allocation. Analogous to a relational database table.</dd>
				</dlentry>

				<dlentry>
					<dt>Indexes</dt>
					<dd>An index on a keyspace. It is analogous to a relational database index. Types of
						indexes include tree, view, fulltext, hash, and other indexes.</dd>
				</dlentry>

				<dlentry>
					<dt>Dual</dt>
					<dd>The dual keyspace has been added for evaluating constant expressions. It contains
						a single entry with no attributes.</dd>
				</dlentry>

			</dl>

		</section>

		<section>
			<title>Querying datastores</title>
			<p>Datastores can be queried as follows:</p>
			<codeblock>SELECT * FROM system:datastores</codeblock>
			<p> It will return the following attributes: </p>
			<ul>
				<li>id: string (id for the datastore)</li>
				<li>url: string (URL for the datastore instance)</li>
			</ul>
		</section>

		<section>
			<title>Querying namespaces</title>
			<p>Namespaces can be queried as follows:</p>
			<codeblock>SELECT * FROM system:namespaces</codeblock>
			<p> It will return the following attributes: </p>
			<ul>
				<li>id: string (id for the namespace)</li>
				<li>name: string (name for the namespace)</li>
				<li>store_id: string (id for the datastore to which the namespace belongs)</li>
			</ul>
		</section>

		<section>
			<title id="title__Toc272567207">Querying keyspaces</title>
			<p>Keyspaces can be queried as follows:</p>
			<codeblock>SELECT * FROM system:keyspaces</codeblock>
			<p> It will return the following attributes: </p>
			<ul>
				<li>id: string (id for the keyspace)</li>
				<li>name: string (name for the keyspace)</li>
				<li>namespace_id: string (id for the namespace to which the keyspace belongs)</li>
				<li>store_id: string (id for the datastore to which the keyspace belongs)</li>
			</ul>
		</section>

		<section>
			<title id="title__Toc272567208">Querying indexes</title>
			<p>Indexes can be queried as follows:</p>
			<codeblock>SELECT * FROM system:indexes</codeblock>
			<p> It will return the following attributes: </p>
			<ul>
				<li>id: string (id for the index)</li>
				<li>name: string (name for the index)</li>
				<li>index_key: array of strings (list of index keys)</li>
				<li>index_type: string (type of index, for example, view index)</li>
				<li>keyspace_id: string (id for the keyspace to which the index belongs)</li>
				<li>namespace_id: string (id for the namespace to which the index belongs)</li>
				<li>store_id: string (id for the datastore to which the index belongs)</li>
			</ul>
		</section>

		<section>
			<title>Querying dual</title>
			<p>Dual can be used to evaluate constant expressions. </p>
			<codeblock>SELECT 2+5 FROM system:dual</codeblock>
			<p> It will return 7. </p>
		</section>

	</conbody>
</concept>
