<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="concept_csn_h4v_vs">
 <title>Cross datacenter replication</title>
 <shortdesc>Using the cross datacenter replication (XDCR) capability you can set up replication of data between clusters. XDCR helps protect against data center failures and also helps maintain data locality in globally distributed mission critical applications. </shortdesc>
 <conbody>
  <p>As an administrator, you can use XDCR to create replication relationships that replicate data
   from a source cluster’s bucket to a destination cluster’s bucket. You can also set up complex
   topologies across many clusters such as bidirectional topologies, ring topologies, tree
   structured topologies, and more. </p>
  <p>XDCR uses DCP to stream mutations with an agent running on each node within the data service.
   This XDCR agent is tuned to function with low latency and high reliability over WAN type
   latencies and efficiently handle frequent connectivity issues between clusters. <fig
    id="fig_m4y_g3d_ws">
    <title>Cross datacenter replication (XDCR)</title>
    <image placement="break" href="images/xdcr.png" width="600" align="left" id="image_n4y_g3d_ws">
     <alt>Cross datacenter replication (XDCR) with Couchbase Server </alt>
    </image>
   </fig></p>
  <p>In XDCR, each replication stream is set up between a source and destination bucket on separate
   clusters. Each bucket on each cluster can be a source or a destination for many replication
   definitions in XDCR. XDCR is a "push-based" replication and so each source node runs the XDCR
   agent and pushes mutations to the destination bucket.</p>
  <p>The XDCR agent on the source node uses direct access communication (XMem) to propagate
   mutations from the source vBucket to the matching vBucket on the destination cluster. Since there
   are equal number of vBuckets (typically 1024) on both the source and the destination clusters,
   there is a one-to-one match for each source and destination vBucket.</p>
  <p>It is important to note that XDCR does not require source and destination clusters to have
   identical topology. XDCR agents are topology aware and match the destination vBucket with the
   local vBucket, propagating mutations directly from vBucket to vBucket.</p>
 </conbody>
</concept>
