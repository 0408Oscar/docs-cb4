<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="dev-install-server">
  <title>Couchbase Server</title>
  <body>
        <section><title>Install Couchbase</title>Lorem ipsum dolor sit amet, consectetur adipiscing
            elit. Nunc iaculis justo sed justo feugiat pulvinar. Vestibulum ante ipsum primis in
            faucibus orci luctus et ultrices posuere cubilia Curae; Nullam eget hendrerit nisl. Nunc
            feugiat tellus arcu, at fringilla lacus dignissim ac. Aliquam vel tellus vitae leo
            pharetra cursus non id erat. In non erat rutrum, pharetra justo ut, dictum metus. Donec
            ac venenatis lacus. Fusce elementum dignissim ornare. In leo mauris, scelerisque mollis
            erat sit amet, malesuada consectetur odio. Donec aliquam ipsum non congue ultrices.
            Maecenas tortor leo, blandit ut aliquet non, varius nec odio. Pellentesque purus ex,
            maximus ut fringilla ut, dapibus eget dolor. Aenean mattis, ante non eleifend posuere,
            tortor nunc vehicula ex, ac porttitor libero ex id turpis.<p>Suspendisse rhoncus enim
                libero. Mauris vitae faucibus justo. Maecenas magna neque, hendrerit sed mauris in,
                aliquam feugiat neque. Morbi euismod massa quis dapibus consequat. Morbi auctor nec
                lacus a iaculis. Nunc eu sodales felis. Donec ac erat ipsum. Aliquam eget magna
                ante. Etiam non suscipit eros. Proin suscipit suscipit libero ac dictum. Vivamus
                vitae dui ut est cursus fringilla et nec turpis. Sed ultrices odio a egestas
                convallis. Morbi mattis eleifend felis. Sed at sem metus. Quisque dignissim dapibus
                erat at pretium. Duis gravida lacus ex, quis consectetur nisi imperdiet
                et.</p><p>Etiam aliquet orci augue, in pharetra turpis mattis et. Nulla vel ex eu
                purus tincidunt viverra. Nam et facilisis erat. Praesent augue tellus, aliquam sed
                commodo et, laoreet a nisi. Curabitur ornare nulla id mollis condimentum. Sed luctus
                sagittis lectus, sed viverra ipsum dapibus eget. Proin ultricies purus eget elit
                venenatis tempus at ac velit. Donec id massa tortor. Praesent sagittis non ipsum
                porttitor commodo. Pellentesque ac vulputate enim. Aliquam vestibulum magna quis
                dolor bibendum, sit amet rutrum nisi dignissim. Donec nisi leo, mollis eu consequat
                sit amet, dignissim consequat arcu. Vivamus in nisl vitae sapien dapibus dictum
                vitae vel risus. Aenean vel augue nibh. Pellentesque habitant morbi tristique
                senectus et netus et malesuada fames ac turpis egestas. Suspendisse vitae ipsum
                placerat, varius ligula tincidunt, hendrerit dui.</p></section>
        <section>
            <title>Using Couchbase</title>
            <p>Now that you've installed the server, you can start storing, retrieving, and querying
                documents with Couchbase. You can start with an SDK, the command-line cbc tool, or
                the web browser.</p>
            <p>Every item in a database goes through the basic <i>CRUD</i> cycle, which is typical
                of an application’s use of data. CRUD stands for create, read, update, and
                delete:</p>
            <ul id="ul_snj_cr2_gv">
                <li>
                    <p><b>C</b>reate: when data is first inserted into the cluster</p>
                </li>
                <li>
                    <p><b>R</b>ead: when an application retrieves the data</p>
                </li>
                <li>
                    <p><b>U</b>pdate: when data is modified to reflect a change in the state
                        represented by the data</p>
                </li>
                <li>
                    <p><b>D</b>elete: when the data is no longer needed</p>
                </li>
            </ul>
            <p>The following examples use the <xref href="cli-overview.dita#concept_lg3_dhm_zs"
                    >command line</xref> interface to demonstrate the basic CRUD operations. If you
                don’t know how to use or install the command line client, don’t worry - we’ll walk
                through the steps in the next chapter.</p>
        </section>
        <section><title>Creating documents</title><p>Create the document <i>mnunberg.json</i>. It
                can be anywhere on your file
                system:</p><codeblock outputclass="language-javascript">{
    "name": "Mark Nunberg",
    "email": "mark.nunberg@couchbase.com",
    "privs": ["admin"],
    "location": {
        "country": "United States",
        "state": "NV",
        "city": "Reno"
    },
    "following": [
        "u:tgreenstein", "u:ingenthr", "u:potus"
    ],
    "likes": ["doge", "pastries"]
}</codeblock><p>Now,
                insert the document into Couchbase using the <i><codeph>cbc</codeph></i>
                utility:</p><screen>$ cbc create --mode insert mnunberg &lt; mnunberg.json</screen><codeph>mnunberg</codeph>
            is the document’s ID. The command pipes the document's content to the
                <cmdname>cbc</cmdname> command’s standard input.</section>
        <section>
            <title>Reading documents by ID</title>
            <p>Documents can be retrieved using their IDs. Retrieving a document by ID is extremely
                fast. The following query takes about 1 millisecond.</p>
            <screen>$ cbc cat mnunberg
{
    "name": "Mark Nunberg",
    "email": "mark.nunberg@couchbase.com",
    "privs": ["admin"],
    "location": {
        "country": "United States",
        "state": "NV",
        "city": "Reno"
    },
    "following": [
        "u:tgreenstein", "u:ingenthr", "u:potus"
    ],
    "likes": ["doge", "pastries"]
}</screen>
        </section>
        <section>
            <title>Reading documents by querying</title>
            <p>Retrieving a document may be done using a unique identifier assigned by the
                application at the document’s creation, or by inspecting its contents to see if it
                matches a certain criteria. ID lookups are quicker, but querying documents allows
                for richer search capabilities (for example, "Give me all likes and followed users
                located in the US?" versus "Give me a user with the ID e3d882a4").</p>
            <screen>$ cbc n1ql \
  'SELECT following, likes FROM default WHERE location.country = "United States"'
       {
            "following": [
                "u:tgreenstein",
                "u:ingenthr",
                "u:potus"
            ],
            "likes": [
                "doge",
                "pastries"
            ]
</screen>
        </section>
        <section><title>Updating documents</title><p>Updating a document means changing the existing
                document. For example, take the file above and add a <codeph>likes</codeph>
                field:</p><screen>    ...
    "likes": ["doge", "pastries", "couchbase"]
    ....</screen>Then
            use the <cmdname>cbc</cmdname> tool to update the document in
            Couchbase:<screen>$ cbc create --mode replace mnunberg &lt; mnunberg.json</screen></section>
        <section>
            <title>Deleting documents</title>
            <p>This example shows how to delete the document with the ID
                <codeph>mnunberg</codeph>.</p>
            <screen>$ cbc rm mnunberg</screen>
        </section>
        <section>
            <title>Couchbase clients</title>
            <p>Clients access data by connecting to a Couchbase cluster over the network. The most
                common type of client is a Couchbase SDK which is a full programmatic API that
                enables applications to take the best advantage of Couchbase. The command line
                client provides a quick and streamlined interface for simple access and is suitable
                if you just want to access an item without writing any code.</p>
        </section>
    </body>
</topic>
