<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic xml:lang="en-us" id="topic8026">
 <title>Red Hat and CentOS installation</title>
 <shortdesc>Couchbase Server supports Red Hat (RHEL) and RHEL-based operating systems such as CentOS.</shortdesc>
 <body>
  <p>Before you start with the installation, ensure that dependency checking tool
        <cmdname>pkgconfig</cmdname> is installed. The Couchbase Server package requires this
      package to verify certain package dependencies have been met.  </p>
  <section><title>Check OpenSSL dependency</title></section>
  <p>The Couchbase Server RPM performs dependency checks using <codeph>pkgconfig</codeph> for
   RHEL. Verify that <codeph>pkgconfig</codeph> is installed, and install it if necessary:</p>
  <p><codeblock>sudo yum install -y pkgconfig</codeblock> Upon successful installation, the
   following output appears:
   <codeblock>Loaded plugins .... Installed: pkgconfig.x86_64 1:0.21-2.el5 Complete!</codeblock></p>
  <note type="important">Please ensure that you are running OpenSSL v1.0.1g or higher. On Monday,
   April 7th, 2014, an OpenSSL vulnerability was disclosed which has been called one of the worst
   security holes in recent internet history. The bug, called the Heartbleed bug, was introduced in
   OpenSSL version 1.0.1. It has been in the wild since March of 2012 and is patched with OpenSSL
   version 1.0.1g released on April 7th, 2014. The problem, tagged CVE-2014-0160, is described in
   detail in this <xref href="https://web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-0160"
    format="html" scope="external">NIST article</xref>. </note>
  
  <p>For CentOS systems, you can query the version of the OpenSSL package installed on your system
   by typing: <codeblock> rpm -q -a | grep "openssl"</codeblock></p>
  <p>You should receive output that looks like this:
   <codeblock> openssl-1.0.1e-16.el6_5.7.x86_64</codeblock></p>
  <p>If you are on one of the supported distros, ensure that your OpenSSL version is up-to-date. 
   If your distribution is not supported anymore, 
   it is highly recommended that you transition to a supported operating system due to this bug's severity.
  </p>
  <section><title>Setting up saslauthd for RHEL6+</title>
   <p>In LDAP authentication, <codeph>saslauthd</codeph> process handles authentication requests on
    behalf of the SASL library while the LDAP protocol is used to connect to the LDAP server.</p>
    
    <p>Remote authentication with the LDAP server requires proper configuration of the
     <codeph>saslauthd</codeph> agent, which must be installed and configured on each Couchbase
    Server node. </p>
   <note type="note">Make sure that you have the prerequisites for the LDAP software you are installing, such as OpenLDAP libraries.</note>
   
   <dl>
    <dlentry>
     <dt>Supported saslauthd packages for LDAP integration</dt>
     <dd>Install your Unix operating system with the package that is supported for LDAP integration:
      CentOS 6: saslauthd 2.1.26 or higher. <p>This binary is a part of <codeph>cyrus-sasl
       </codeph>rpm, so make sure it is installed.</p></dd>
    </dlentry>
   </dl>
  
  
  <dl>
   <dlentry>
    <dt>Set up the configuration file</dt>
    <dd>On each Couchbase node, create <filepath>/etc/saslauthd.conf </filepath>:
      <codeblock>$ cat /etc/saslauthd.conf
      # ldap_servers: ldap:&lt;URI&gt;:&lt;PORT&gt; or ldaps:&lt;URI&gt;:&lt;PORT&gt; for TLS protected connection
       ldap_servers: ldap://my.company.com:389
       # Specifies the distinguished name to which the search is relative. 
       # The search includes the base # or objects below. It also includes Domain Components (dc) 
       # such as in dc=company and dc=com.
       # The administrative users created in LDAP with the attribute uid are placed under the user's
       # organizational unit ou under the two domain components (example and com).
       OU=InteractiveUsers,DC=my,DC=company,DC=com
       # Specifies the search filter. The values for these configuration options correspond to the values
       # specific to the test
       ldap_filter: (samAccountName=%u)
       # Optional: specify a user to perform ldap queries
       ldap_bind_dn: CN=<b>user_ldap</b>,OU=Users,DC=my,DC=company,DC=com
       # Optional: specify ldap userâ€™s password
       ldap_password: -sEcReTp#AssWoRd!
     </codeblock></dd>
   </dlentry>
  </dl>
  <dl>
   <dlentry>
    <dt>Configure <filepath>/etc/sysconfig/saslauthd</filepath></dt>
    <dd><codeblock>$ cat /etc/sysconfig/saslauthd
     # Just keep the default
     SOCKETDIR=/var/run/saslauthd
     # Make sure MECH is set to ldap (pam is default)
     MECH=ldap
     # Include the config file described above
     FLAGS="-O /etc/saslauthd.conf"
    </codeblock></dd>
   </dlentry>
  </dl>
  <dl>
   <dlentry>
    <dt>Test <codeph>saslauthd</codeph></dt>
    <dd>
     <p>If the connection is properly working, the user <codeph>couchbase</codeph> must have access
       to <filepath>/var/run/saslauthd/mux</filepath> to communicate to
       <codeph>saslauthd</codeph>.</p>
    <ol>
     <li>Start the <codeph>saslauthd</codeph> service (it is a good idea to set it to start
        automatically with
        <codeph>chkconfig</codeph>):<codeblock>[root@localhost ~]# service saslauthd restart
       Stopping saslauthd:                                    	[  OK  ]
       Starting saslauthd:                                    	[  OK  ]
       
       [root@localhost ~]# chkconfig  saslauthd on
       [root@localhost ~]# chkconfig --list saslauthd
       saslauthd   	0:off   1:off   2:on	3:on	4:on	5:on	6:off
      </codeblock></li>
     <li>Test LDAP authentication:
        <codeblock>[root@localhost ~]# sudo -u couchbase /usr/sbin/testsaslauthd -u &lt;username&gt;\
       -p mypassword -f /var/run/saslauthd/mux
       <b>0: OK "Success</b>"
      </codeblock></li>
    </ol> 
     
     
    </dd>
   </dlentry>
  </dl>
  
  </section>
 
 </body>
 
 
 
 
</topic>
