<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="topic_g3h_r2q_fw">
  <title>Upgrading Couchbase Server</title> <shortdesc>Upgrading Couchbase Server is key to maintaining a properly functioning cluster. 
    It is a relatively simple process that is performed commonly with zero downtime</shortdesc>
  <body>
    <p>New releases of Couchbase Server provide multiple bug fixes and new features. It is critical to keep up on releases to keep a well running cluster. For each release, read the release notes to ascertain if there are bugs that might affect a running cluster or features that might be of benefit.</p>
    <p>When upgrading Couchbase Server, preference should usually be given to ease of operation, keeping the cluster 100% online, and providing consistent cluster performance during the upgrade process. That said, there may be special circumstances where one needs to have more upgrade options.
    </p>
    <p>For an overview of the new features in Couchbase Server version 4.5, check out the <xref
        href="../release-notes/relnotes.dita#topic_gbk_tyh_t5">release notes.</xref></p>
    <section><title>When to do an Upgrade</title>
      <p>As with most upgrades, if possible it is best to do an upgrade at off hours and not at the system’s peak usage times. Even though rebalances are designed to be a background process, there can be some performance impact.
      </p>  

  </section>
    <section><title>Upgrade Options</title>
      <p>There are various options for upgrading Couchbase Server, each with pros and cons, as well as levels of risk and complexity.</p>   
    </section>
    <section><title>Option #1 - Rolling Online Upgrade</title>
      <p>A rolling online upgrade is the recommended upgrade process for a Couchbase cluster. If you
        have no sound reason to use another option, this is the one to use. It is an online upgrade
        and provides the ability to incur no downtime for the database and applications, as all data
        operations continue normally throughout the process. Rolling upgrades involve the addition
        of completely new upgraded node(s) or the removal, upgrade plus adding back of node(s) using
        the rebalance feature of Couchbase to redistribute the data amongst the nodes, but keeps
        that data accessible the entire duration of the upgrade.</p>  
      <p>Couchbase Server is specifically designed to provide fully online 
        upgrades with minimal impact to no impact on the availability and performance of the application. 
        If you find this is not the case, please report a bug.</p>
      <p>There are three options for rolling upgrades.</p> 
    
   <dl>
     <dlentry>
       <dt>Using Swap Rebalance</dt>
       <dd>This method incorporates introducing new nodes into a Couchbase Server cluster as you remove the same number of nodes to be upgraded. It uses a feature called Swap Rebalance to move vBuckets efficiently from an existing node running the Data Service to a new node that will run the data service.
       </dd>
       <dd>While this method is the safest and provides the most availability, one downside to this
            option is the overall duration of a cluster upgrade may be longer as compared to other
            options. If the speed of an upgrade is the primary concern for the cluster to be
            upgraded, such as if you have a narrow maintenance window, see <xref
              href="#topic_g3h_r2q_fw/graceful" format="dita">Graceful Failover</xref> or <xref
              href="#topic_g3h_r2q_fw/offline" format="dita">Offline Upgrade</xref> options. </dd>
     </dlentry>
   </dl>
   <dl>
     <dlentry>
       <dt>Using Regular Rebalance</dt>
       <dd>This method is used when you must use the existing nodes of the cluster to complete the
            upgrade. It involves removing at least one existing node from the cluster, upgrading the
            node(s) and then added back in. Using this upgrade method will reduce the capacity of
            the cluster during the upgrade process. </dd>
       <dd>Like a swap rebalance upgrade, this style will require multiple rebalances to
            complete.</dd>
     </dlentry>
   </dl>  
      <dl>
        <dlentry id="graceful">
          <dt>Using Graceful Failover</dt>
          <dd>This option involves performing a rolling online upgrade using a Graceful Failover instead of the full addition and removal of nodes in option #1. This option is typically faster and less resource intensive as it does not involve moving of vBuckets between nodes. With this process, there is a cluster rebalance but it is only to synchronize the vBuckets on the upgraded node when each node returns to the cluster. An added benefit over other online upgrades is the ability to save the global secondary indexes without rebuilding them.
          </dd>
          <dd>The primary downside to this option is increased risk as replicas are used for faster failover and not recreated until a rebalance occurs. This option is not available when choosing to upgrade with net-new systems (as in the case of many cloud deployments) since those new nodes would not have the previous nodes’ data in place. Use Option #1 when upgrading with net-new systems.
          </dd>
        </dlentry>
      </dl>
      
    </section>
    <section><title>Option #2 - Upgrade Using Intercluster Replication</title>
      <p>For this option, another Couchbase Server cluster is created or already exists and then intercluster replication is enabled via the Cross Datacenter Replication (XDCR) built-in feature of Couchbase Server. The application is transitioned over by the administrator to use the new cluster as part of the upgrade process. While the upgrade  process is relatively straightforward  to set up, it  will require more investment in servers/instances and networking, as well as a change to the application to see the new upgraded cluster. It is best used when an administrator does not want to tinker with the original cluster or would like to have an immediate rollback position. This method is recommended when an existing XDCR connection is already in place.
      </p>  
      <p>Some people modify their application, to make this can be a zero downtime upgrade by having
        their application aware of both clusters and can failover between them automatically. If you
        do this, keep in mind that unlike regular operations against the Data Service, XDCR is
        eventually consistent. Most people treat this as an offline upgrade and will roll the
        application over with the new cluster configurations. Which solution is best will depend on
        your SLA requirements. </p> 
      
    </section>
    <section id="offline"><title>Option #3 - Offline Upgrade</title>
      <p>Choose an offline upgrade when the situation calls for an easy and fast upgrade method as well as when the database can incur a controlled outage. The offline upgrade is more likely to succeed in situations where an online upgrade option might fail, but also the rare time a cluster is unstable and has been determined that a Couchbase Server upgrade will fix a specific issue.</p>
      <p>The offline upgrade  is also the easiest option for single-node environments (such as in development) where additional nodes are not available; the overall dataset is minimal, and a brief disruption is tolerable.
      </p>
    
    
  </section>
    
    <section><title>Supported Upgrade Paths</title>
      <p>For supported upgrade paths of Couchbase Server, see the Upgrade matrix for more information. Although infrequent, there may be times when an upgrade to an intermediate version is required before getting to the latest release.</p>    
      <p>For information on Couchbase Server end of life dates, please see our support policy.
      </p>
      
      
    </section>
    <section><title>Preparing for an Upgrade</title>
      <p>Before upgrading your production cluster, be sure to test the upgrade process in a test environment that matches your production environment as closely as possible.</p>  
      <p>For each upgrade type mentioned above, there is an example checklist in those sections for you to start with.</p>
     
   </section> 
    
    <section><title>Multi-Dimensional Scaling (MDS)</title>
      <p>In Couchbase Server Enterprise Edition version 4.0+ the Data, Query, and Index Services
        workloads can all be independently scaled to isolate workloads. This means that while all
        nodes are part of the cluster, each node in the cluster might only run one or more of the
        services. For example, there is a seven-node cluster. Three nodes are running just the Data
        Service; two nodes are running the Indexing Service, and two nodes are running the Query
        service. Each workload may be isolated to a node</p>   
      <p>If the cluster uses multiple service types, upgrade each type in a rolling manner. While upgrading, focus on nodes that support a given service to ensure that the service is not disrupted during the upgrade, then move to upgrading the next service. You could also group the nodes. For example, while upgrading a query service node, swap in a new query service node so you continue to have that service available. Even better would be to have enough nodes for the upgrade that you can always have full capacity of the cluster. If the node has multiple services, ensure that enough of such nodes remain to service requests for the different services when upgrading.</p>
      <p>Consider the following additional points about MDS and node service types when planning your upgrade:</p>
      <ul>
        <li>You cannot introduce additional node service types when adding a newly upgraded node to a cluster consisting of mixed version 3.x and 4.x nodes. If you attempt to upgrade a node to 4.x and introduce it back into the cluster with additional services checked prior to upgrading all nodes, you'll see a red warning similar to this:
          
          <systemoutput>Attention - services parameter is not supported in this cluster compatibility mode.</systemoutput></li>
        <li>If the current server quotas are insufficient, you may be prompted to change the server
          quota when adding a node with additional data services selected to a cluster. <p>If you
            are adding additional services to the nodes while upgrading, this can affect the server
            RAM quota, and you will be prompted to adjust it. </p></li></ul>
      
      <dl>
        <dlentry>
          <dt>Index Service</dt>
          <dd>By default, Global Secondary Indexes (GSI) exist on one node of the Index Service. It
            is considered best practice to create them on more than one node, but many people miss
            this. For an upgrade, if the indexes are only on one node of the Index Service, then you
            will need to take special steps as part of to upgrade to make sure the secondary indexes
            are on the other Index Service nodes of the cluster. For more information on this,
            please see the Online Upgrades section. </dd>
        </dlentry>
      </dl>
    <dl>
      <dlentry>
        <dt>Query Service</dt>
        <dd>It is best practice to have more than one node in the Query Service for HA reasons, but
            when upgrading and removing individual nodes for the upgrade, pay attention to have
            enough capacity for your queries when you remove a node. If you are upgrading two nodes
            at a time, make sure you do not remove both query nodes at the same time.</dd>
      </dlentry>
    </dl>  
      
      
    </section>
    <section><title>Downgrades and Limitations</title>
      <p>Once an upgrade of a single Couchbase Server cluster has started, you can roll back to the previous version as long as at least one node is on the previous version. For example, if you have three nodes upgraded to 4.5 and one still on 4.1.x, you can still roll all nodes back to 4.1.x.</p> 
      <p>Once all nodes in the cluster have been fully upgraded, the window for a rollback of that cluster has closed. For more information on the upgrade rollback, see (page).
      </p>
      <p>If you first upgrade a cluster but then decide to downgrade to a previous version, your only option is to set up another Couchbase Server cluster and use XDCR with the target cluster being the older version. Follow the Upgrading Using Intercluster Replication, having in mind that the new cluster would be the older version you are rolling back to.</p>
     
   </section> 
    <section><title>Upgrading Community Edition to Enterprise Edition</title>
      <p>It is supported and tested to perform the online and offline upgrade options when upgrading
        from Couchbase Server Community Edition to Enterprise Edition. Just remember that Enterprise
        Edition is not free to run in production. If you are interested in upgrading to Couchbase
        Server Enterprise Edition, click here. For more information on supported upgrade paths of
        Couchbase Server, see the Upgrade matrix for more information.</p>  
     
     
   </section> 
    <section><title>Couchbase Client SDK Upgrades</title>
      <p>If you are upgrading Couchbase Server, you are not required to upgrade the client SDKs the applications use. Couchbase client SDKs are forward and backward compatible, but older client SDKs may not be able to take advantage of new Couchbase Server features. </p> 
      <p>That said, it is strongly encouraged to review periodically the versions of client SDKs
        being used by applications and plan for upgrading periodically. Every month Couchbase
        releases new versions that contain updates, bug fixes and new features for the SDKs. For
        more information and release notes for supported client SDKs, please check out the guide on
        that.</p>
    
  </section>  
    <section><title>Precautions for Couchbase Mobile’s Sync Gateway</title>
      <p>Take special precaution when upgrading Couchbase Server if you use the cluster in conjunction with Sync Gateway.
        
        Be aware that Sync Gateway versions prior to v1.2 do not support the automatic handling of Couchbase Server cluster topology changes for related buckets. An upgrade of Couchbase used with older versions of Sync Gateway must carefully coordinate a manual reconfiguration of the Sync Gateway service connection between the key points in your upgrade process.</p> 
      <p>Best practices recommend first to upgrade all Couchbase Sync Gateways to at least version
        1.2 before upgrading the Couchbase Server cluster to which they are connected. </p> 
     
   </section> 
  </body>
</topic>
